program Kr : pJ : takes Awa, e, Jf, F2, m, E : integer array returns nothing i010, m, W : boolean array; EYB0 : boolean; X, r, x : integer; let W[(4) and 0] = array - (5) and 7 end x : takes u : boolean array; KP, a34, FVDaa, J2, mI2, C : boolean array; w1, I, W, F : boolean; _, L : integer array; pP : integer array; iC_ : boolean; d : boolean returns integer array while - 6720 : chillax end end B : takes m6 : boolean; WB : integer array; F, g : integer array; r : boolean; y : boolean returns boolean array D : boolean array; Q30, bBQ : boolean; e : boolean; c : boolean; chillax end g9 : takes a, w : boolean array; K6g, D0 : boolean array returns boolean l8C, ul : boolean; chillax end bb : takes t9r0, D, Q, b : integer array; y : boolean returns boolean array chillax end main : do G(- X(25800) rem 1510 / 70800 and 1 or 3980 * true + true and 071 - 52 < - false + (4) and 6930 + 1, (717) > - false and 537, - M and 7, 94 - 30 /= 144); while - U1[49800] and false and 956 + true and 0 : chillax end end
