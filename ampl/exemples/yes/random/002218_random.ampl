program b4o0 : aN : takes O_J, i, i, yOBaa, U80 : boolean; MI, KZ : integer array; n6ja : integer array; H26aa : integer; W490 : integer returns nothing when case false or 4 : while 9720 : chillax end; when case 4 : chillax end; when case 2 : chillax end; pop end case - 14600 - 4 : pop; do T5(1) end; let VB[- 80 - 3] = 48 end x : takes x : integer returns nothing chillax end n3Ia : takes E : boolean; t : integer returns nothing chillax end U2 : takes y : integer array returns nothing when case 3 : pop end otherwise : chillax end end U : takes kOQ : boolean returns nothing chillax end main : S, s0, P, a, SW, po, m : boolean; u, eM7, H, c4k0, E : boolean; let i3[- v[7] and bK7 and b5 and 3] = - F(0); pop 90 and 10 end
