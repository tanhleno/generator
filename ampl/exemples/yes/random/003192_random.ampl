program m : wL9 : takes T3P0a, i, L, Vl8, _ : integer; F, _3j : boolean array returns integer k : integer; chillax end Y36a : takes L7 : boolean; es : boolean; r, X, t : integer array; H, aR0 : boolean array; L, ev2 : integer array; j : boolean; k : boolean; Q : boolean returns integer array do Y(34 - 7); do Bl(04 = 0); do a(9) end rK4 : takes D920a, P02 : integer; y3 : boolean; D, ji : integer returns integer array L : boolean; let J = array 48 end TZ : takes J, h2, w7, kRV, u : integer array returns nothing k : boolean; tvBaa : boolean; output 9 . ""; when case 8 : chillax end; when case 38 : chillax end; pop end cJ7a : takes r, Y0, c, I : boolean returns nothing when case 5 : chillax end; pop end Q9L : takes cjV : boolean returns boolean T : boolean; chillax end main : when case true and M[4] rem not 3740 - true or 52000 + 4 <= - muP[1] and false and 8 : chillax end case not g * false - SsA and 697 - 8 < not 90300 - 1330 - 5 : do z_l(84, 535); input J7naa[6]; pop end otherwise : when case 90 : chillax end end end
