program Z : jYz0a : takes H, g1ja, X6q, V_, V8z0 : integer array; r9Y : integer; EU4, v2 : integer; u7 : boolean array returns nothing chillax end R : takes _1 : integer array returns nothing aVt, l, B7 : integer; chillax end k : takes s, zC80, fE, O : integer; tZ : boolean array; XY : boolean array returns nothing X4ja : boolean; _01 : boolean; nv : boolean; pop 29; do J9(40, 17) end main : GG, VB, l9, v4 : integer array; when case true * g / 70 and 05 : when case 5 - 7 : chillax end case 1 : chillax end case 4 : pop end case 96 : chillax end end case - 8 / (18) - v6D - 37 - 6 : chillax end case - mYO : chillax end case 1 - 3070 = 5 : let B1Z = 6 end case 499 : chillax end case 6 : pop end otherwise : chillax end end
