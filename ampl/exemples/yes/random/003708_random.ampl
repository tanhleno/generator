program dZUa : o : takes Y, F, Z1, x6, t10 : integer array returns boolean let P[- (883) and 16] = - 10300 end T : takes x : integer returns nothing ji, Kb, e3Y : boolean array; chillax end H : takes RM4, f : integer; p : integer array returns integer D : boolean; b78, Y : boolean; output "k" end a0Da : takes L, rfn : integer array returns nothing c, a : boolean; _ : boolean; jH : boolean; chillax end main : input EAra[- 98 or not false * (78) and 040]; let Y = array 3 rem not 5; do p(- not 41, 400 < 08, 076 = 07, 8370) end
