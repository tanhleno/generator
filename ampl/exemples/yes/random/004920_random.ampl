program n : m4 : takes N, Ii, a, Rn : boolean array; Wv, m : boolean returns nothing U340, G2 : boolean; c : boolean array; p, A, w2 : boolean; Vj1 : boolean; XG : boolean; H : boolean; when case - (0) and 79 - 1 - 039 : chillax end; input a end P : takes V : integer; r5, V, eMD0a, f, f4, t : integer array; J840, x240, O, W : integer array returns boolean while - 723 - 9470 <= 0 : chillax end; while 9 : let x0f = 51 end end h1 : takes Y : integer; EP : boolean array returns nothing do z3Y(6 = 2, 6) end m_ : takes r, Bs00a : integer returns nothing while 5 : pop end; output "+k"; output "\n"; pop end main : chillax end
