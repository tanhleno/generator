program z : Y : takes Z0, N, k9, u9U : boolean array; xj80, q : integer returns integer when case B1j0a and 5 : chillax end case 1480 : input NqS end case 19 = 4 : chillax end case 32 : chillax end end v7p0a : takes b : integer array returns integer tMF : boolean array; chillax end QqK0a : takes n, X, Ok40a : integer array returns nothing chillax end G : takes d : integer; J1, Q4 : boolean array returns nothing chillax end p9n : takes qC40a, _, A5, Q0 : boolean returns integer array pop; output "h"; pop end VP : takes DO3aa : integer; s : boolean returns integer array t : boolean; let mJ = 8; pop end main : Q : integer array; while - _(4, 2) - false rem i1 - true and 45 or 09300 - 07 /= - YW30a - not 7 : output 633 = 2 end; when case not false and(293) /= - M and 620 or 8 - 6 : let pd60[7] = 28 end case - T + 2 - 48 : output "|" . "0^" end otherwise : pop end; do c40(- not 0 or 4 <= 7440); let aM[1 - 0810] = 48 = 6280 end
