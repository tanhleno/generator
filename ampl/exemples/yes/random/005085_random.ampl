program OmU0a : K : takes Z700a, N, M, u : boolean array; l1 : boolean array returns nothing let VZ1 = array - 0570; while - 8 = 3 : chillax end; do XL80a(9, 7800) end y : takes P : integer; Qf30 : boolean returns boolean zl : integer array; chillax end main : when case - not true : chillax end case - mSe0a[5] - y and 8 < - not 5 : chillax end case - true and 2 < 33 : chillax end case 40 : do v(93); do _K6(368); pop end case 2 : let D = 86 end otherwise : let f4[0160] = array 8 end end
