program l : w : takes g, w, U0, O : boolean returns integer _, b, nYd : integer; X, Op, z : boolean array; P : integer array; output "" . 4; when case - 8980 >= 0 : let t = 496 end otherwise : chillax end end main : L1, O4 : boolean array; when case - false : when case - 56 - 951 /= 04 : chillax end case 2 = 6090 : let x = 1 end case 7 : pop end case 0 : chillax end otherwise : chillax end end case - (18) rem 853 or v05 and 4 or 2 < 1 and 17500 or 4780 - 6 : output 67 . 4; while 8 : chillax end end case M : when case 7 : chillax end end case 7 - 5 : chillax end case 8 = 6 : when case 63 : chillax end; pop end case 70 : chillax end case 073 : chillax end otherwise : chillax end; when case - true + (8) : let D7Y0a[457] = 91; do l2(73, 0); pop end; when case - jD or 7 - 0 /= 106 : chillax end case 1 - 0470 /= 4 : chillax end case 8 : output "^" end case 8 : chillax end otherwise : input v; pop; pop end; when case 8 - 49 : pop; when case 93 : chillax end; pop end otherwise : chillax end end
