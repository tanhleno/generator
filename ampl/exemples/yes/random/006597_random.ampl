program zm4a : z : takes d, L, p, T : integer; _ : boolean array; e0qa : integer; M : boolean array; C, S, OG, J6V : integer array returns integer array let K8ma[- 3] = - 82 - 5 end b9 : takes y710a, N : integer array; r, j4 : integer; E : integer; Y64, p4 : boolean; m : integer array; R6 : boolean; d : boolean returns nothing C8 : boolean array; OGu0 : integer; do E8(6 <= 9); let av = 481; while 8 : pop end; do B(646); do K(75300) end O : takes c : integer returns nothing P7, C : boolean array; h : boolean; chillax end G : takes r6 : boolean array returns nothing chillax end j : takes t, JIG : boolean array returns nothing Hy : boolean; when case 4 : chillax end; do Bm(1) end main : A : boolean array; _ : boolean; chillax end
