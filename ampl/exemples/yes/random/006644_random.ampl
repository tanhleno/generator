program Y : hin : takes _HZ, _cW0, Y4, k : integer; z : boolean returns boolean array let VZ3[- true and 39] = array false and 3390; when case - 5 - 95 : do CI(8) end case 3 : when case 208 : chillax end; pop end case 5 : chillax end end MA : takes I, w : integer returns integer pop 661 = 9; let Q[3] = array 2 end main : output "" . 5 >= - 608; while 0 * 84100 and 2 : pop 14 end; while - 1 and 4 - 79 /= 2 : input Q; when case 2 : chillax end end; pop 1 = 5 end
