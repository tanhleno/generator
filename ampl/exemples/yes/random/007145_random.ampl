program T00 : O : takes L, KlW0a, n00a, JIR0 : integer array; iG : boolean array; p : integer; bKLa : integer array; E : boolean array; T2P0a : integer; W_ : boolean; K : boolean returns nothing let ps = - 63000; while - 4 - 28 : pop; output ""; pop end end T : takes y, Z : integer array; E, Pg, I1, BCZ, j47 : boolean; Z_, y, x, X : integer; e, lz9a : boolean array returns nothing z, YP2 : integer; f, hV, Bm : boolean array; chillax end G3 : takes v7 : boolean returns integer J : boolean; chillax end V3 : takes a77, a, E : boolean; C5, m77 : integer; u, Hy10 : boolean returns boolean chillax end _1E0 : takes z : integer; L2 : integer returns nothing nK : boolean; chillax end L4Ba : takes _6a, rHs, Z : integer array; aLo : boolean returns boolean L : boolean; when case 4 : chillax end end main : chillax end
