program FOK : L42aa : takes j14, ZF8, u, PO : integer returns nothing z, P7Iaa, V4, B, t : integer array; f : boolean; let D18a[j and 24800 or 2] = 78 - 97 end main : wj, r : boolean array; Y : integer array; fCG : boolean array; while 7 and 4920 rem false and 7 /= - Zrg0a[8] : do z(- 61, 2520 = 0, 94, 798) end; when case - not false - (9) and 921 : let P9d[7] = array 73 end case(0) : do D5(65); pop; let VL5 = 8; pop end case 387 : while 784 : chillax end end otherwise : chillax end; when case true and 319 : pop; while 66300 : chillax end; when case 500 : chillax end; pop end otherwise : when case 14300 : chillax end end end
