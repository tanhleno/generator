program Cl : s0 : takes D58aa, Q, k, E : integer returns nothing b55, y260a, x : boolean; s6, w : integer array; _ : integer array; f84a : boolean; v : boolean; chillax end YK : takes TB80a : integer array; Yc, T, U : boolean; X, bWs : boolean; a1, M2, j51aa, ce : boolean array; X : integer; F : boolean returns nothing pop 66 end I : takes k, w0_ : boolean returns nothing when case 6 : chillax end otherwise : chillax end end J1 : takes u, Jb : integer array; E : integer returns integer input y; while 1 : chillax end; pop; pop end main : rj, b : integer array; r : integer array; f7 : integer; do j7(3120 rem false < not(6) * a and 5 or 4 and 7); input S[not not 931 + true or 4]; while - 36 >= 4 - 133 : input i; do Y6(0) end; do XfDa(- 8 /= 7) end
