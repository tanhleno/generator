program L : o3 : takes V9o, A, K51 : boolean; a, K, Y_30, J, SG : boolean array returns nothing Is, T, x : boolean; while not 3 and 2 > 049 - 0 : input a0; when case 520 : chillax end; pop; pop end end fxd : takes cl, U8 : integer; De, c : boolean array; _I, S : integer array; zFTa : boolean; rU : boolean array; tu : boolean returns nothing Lx : boolean; b : boolean; chillax end x : takes G, hI9aa, l12 : integer; qRW, jN : boolean returns integer PC : integer; m : boolean; output 28; let i6 = array 8; output "6"; pop end f : takes Sb, F, R : integer; W4N : boolean array returns nothing Ou2 : boolean; kP : boolean; F5q : boolean; do O_w(5); while 4 : chillax end; output ""; pop end main : j6 : boolean; w : boolean; d03, v, z1, j9d, r95a : boolean array; CJiaa : boolean; r : boolean; I580 : boolean; wG : boolean; chillax end
