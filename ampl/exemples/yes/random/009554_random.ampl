program yWl : f : takes j4J, E1, n8 : boolean array; r, s020, w8, L : boolean; I11aa, Zn2, p2, l : integer array; N84, P_c, B5K : integer array returns boolean B, C8 : integer array; p4 : boolean; chillax end sc80a : takes _, vy0 : boolean returns nothing O18a, yg : boolean array; chillax end bgV0 : takes J, V : integer; F, rR, G, N5 : boolean; Y : boolean returns integer array chillax end m1 : takes T : boolean array; tu3, x : integer returns integer array input KE[0]; while 3 : chillax end; pop; pop end Ee : takes yVc0a : boolean array; R : integer returns boolean array EN : boolean; T : boolean; when case 49 : chillax end end E : takes n2 : boolean array; l, EY : boolean; Fv8 : boolean; r : boolean returns nothing chillax end o86 : takes a : boolean; d30 : boolean; i : boolean returns boolean pop end main : S5, Xi : boolean; OB : integer; L5j, n, LuW : integer; when case - false < fI or e : chillax end otherwise : let D[47] = 27600; while 3330 : chillax end; do I51(04); let ku = 7 end end
