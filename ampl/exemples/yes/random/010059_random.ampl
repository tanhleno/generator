program Q : Kb : takes z, D6, rG : boolean array; H : boolean array; L, L : boolean; V : boolean array; h, NY, w, k : integer; X37 : integer returns integer u : integer array; chillax end p : takes G, ET5 : integer array returns boolean array E : boolean array; s9 : integer array; C : boolean; s : boolean; hUda : boolean; chillax end z : takes L, C4 : integer returns boolean K : integer array; u, a6xa : boolean; when case 9 : let n8 = 30300 end case 7 : chillax end; when case 8 : pop end otherwise : chillax end; pop end p2 : takes X, t1, t : boolean; N, M, E, M : integer array; w, i : boolean array returns boolean let QC[2] = 1 end b5 : takes B_, dLf0, q : boolean; V : boolean; Iz, z80aa : boolean; KzV : boolean; sO : boolean returns nothing G : boolean; n : boolean; output "" end M1 : takes UF4 : integer array; S, chYaa : boolean returns boolean while 2 : chillax end end Fq : takes S3, K : boolean; J : boolean returns boolean chillax end main : g, i20, M : integer array; chillax end
