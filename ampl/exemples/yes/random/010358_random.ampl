program yn0 : k : takes kP, u, v : boolean array; K : integer array; L : integer returns nothing input Cu end w : takes I61, WZA0 : integer; X : boolean; hflaa, Y9fa : boolean array; z8 : integer array; N : integer array returns boolean pop 32 = 64; while 8 : do J(424); pop end end c : takes _4I, c, MN5, GN, h3i : boolean array; Q, A : boolean array returns boolean pop 9 end main : y : boolean array; when case true rem false * false or G and S1Y0 and 746 : let BY[- 21] = 75600 = 4 end end
