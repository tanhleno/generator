program i7O0a : qaq : takes g, k, g : integer; L9T0a : boolean; E, I, jz, e, E, C : boolean array returns integer p : boolean array; pop 2 - 96 > 2; do RS(881) end j7e : takes v : integer array returns boolean C, g : integer array; a : integer array; m, l70a : boolean; j6 : boolean; let K_ = array - 1 end f1 : takes W, C, o640a, Q66, S : boolean returns nothing B110a, EZ3aa, i : boolean array; _ : boolean; j0 : boolean; vw6 : boolean; chillax end main : output ""; while not false + aG30a and 8520 + 7 : while 0410 : pop end end end
