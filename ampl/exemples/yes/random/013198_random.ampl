program e : S7 : takes Z, g35, N19 : integer; d : boolean array; ED : integer array returns nothing U, G : boolean; G1, gt, T1, m : integer; w99, J1saa, B2 : integer; K5, V : boolean; chillax end jkF0a : takes z4Q : integer array returns boolean array chillax end O : takes qA, C8, E2, k8, l, D : boolean array; kD, W4Waa : boolean array; h : boolean array returns boolean A, H3, i4 : boolean array; output 40 . 1 end a : takes z, x : boolean array; nyqaa : integer; I : integer; DR, D82 : boolean returns boolean array chillax end Cp : takes Rk, N, sN00, M : boolean array; v : boolean array returns nothing chillax end main : when case - true / 0 or true or 8 and 31 : while - 6 - 6 > 10 : let H46 = 7 end; while 5 : when case 7 : chillax end end; input lE[32800]; while 4 : chillax end end otherwise : chillax end; do bC(- 469 - not 0 and 27 - 3050 >= - H_ - 374) end
