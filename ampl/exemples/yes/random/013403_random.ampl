program i : IJX : takes W7, l5I, Ofq0 : integer; y : integer; r : integer; L : boolean returns integer array xX : integer; f7, C : integer; while xA - 884 <= 3 - 43000 : pop 12; let gR7 = 4; output "" end; do YN(- 2 - 23) end eV : takes Yy, p, R, r, Op, r99 : integer array returns boolean array T8 : integer; when case - 7 - 78 : chillax end; do _5(52 = 7) end main : pop - not false; when case(87) - 4 and 297 >= - 25 + 4 - 9 : chillax end end
