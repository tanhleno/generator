program C : a0 : takes u, Lu6, _9 : integer array; Y, z : boolean returns nothing f : boolean array; while not 0670 <= - 1 : pop 9 end; when case 80600 - 65 : chillax end case 4 = 68900 : chillax end case 1 : chillax end case 996 : chillax end otherwise : chillax end end eU8 : takes c7 : integer returns nothing h, v : integer array; D7, ke : integer array; P2qaa, E8 : boolean; let T[- 826] = 874 = 303; pop; pop end I : takes O : integer array; B : boolean array; Uf : boolean array returns boolean array chillax end k : takes wEBa, NY3 : integer; y6, H, C, K3_aa : boolean array; w : boolean returns nothing output 23 . ""; when case 6 : chillax end; do G530(76800); pop end A1Maa : takes p, M, q : integer array; i : integer array returns integer N32 : boolean; p : boolean; chillax end M : takes y, B : integer array returns nothing chillax end main : when case - true or F = - false and g and 8 + Q and 0 : let N[- 0 - 29] = 81; when case 6 : input Jz; pop end otherwise : pop end; while 9 : chillax end; input wf end case false + true and 2 : pop 44 end otherwise : let bC20a[61] = 2; while 3 : chillax end end; while Z0(1) : chillax end end
