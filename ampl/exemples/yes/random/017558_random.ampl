program A : i_ : takes x, O : boolean; J, nb : integer returns boolean s : integer array; let I[OBGa + 34] = 0 - 0; do YI(05 <= 1); while 32 = 75 : let Lg9 = 54; pop end end WIpa : takes rFQaa : boolean returns nothing M : integer array; while 5 - 0 : do a(607); do O(91); pop end; let w8h0[743] = array 80; while 74200 : pop end; input a end D : takes w56, ScM0 : boolean returns nothing Ht, V : integer array; mq, n6 : boolean; while 6 = 38 : when case 2 : chillax end; pop end; pop 4 end main : chillax end
