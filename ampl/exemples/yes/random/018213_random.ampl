program np : SR : takes V3, NC4aa : boolean; C : integer; X : integer returns boolean lK, TxA0, y : boolean; L7 : integer array; R : boolean; chillax end B : takes b : integer returns boolean array M, z, c6, X : integer; U3, cu : integer array; chillax end K : takes l6 : boolean array returns nothing chillax end D : takes fq : integer; SX : integer; D1, x : integer array returns nothing let x[3550] = array 61 end Yz8 : takes go5a, N, _ : boolean; k, c9 : boolean; E, D : boolean; _ : boolean; X : boolean returns nothing W9 : boolean; E4 : boolean; pop end main : c : integer array; when case - 05300 * true rem true and 6 > A(9950) rem true - (0) and 474 + 7 : do I(- 04500 - 53600 <= 3, 095); when case 41 : output "<n" end otherwise : chillax end end end
