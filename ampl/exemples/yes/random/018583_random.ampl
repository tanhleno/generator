program E : vn2 : takes Y, u : boolean; r8Q : integer returns nothing pop end Y : takes b6, z83, M, Qsr0, D9, xz, w : boolean array returns boolean array output "I" end E : takes L, V, ud2a : integer returns nothing f3 : boolean array; j7 : boolean; when case 6240 = 6 : do u(58) end otherwise : pop end end m80aa : takes c, nD : boolean; l : integer array; w, j, m13aa : integer; o3, fL : boolean returns nothing q : boolean; chillax end L : takes e : integer returns boolean nS : boolean; P : boolean; let k3 = 6; let s = 3; pop end main : F23aa : integer; input p[- not 4]; do _(- true - 1 and 4) end
