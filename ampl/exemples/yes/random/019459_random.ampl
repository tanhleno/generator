program s2 : B : takes D, W : boolean array; b84aa, Se : integer array; l990a, Domaa : boolean array; D, ip : integer; h1d, B, A, l : integer returns boolean input U8[- true and 3 or 173 - 013]; do Hvj(- 5, 2 = 28); while 4 : chillax end end U3B : takes Ye8, BK, Se8a : boolean array; m : integer; AV9 : boolean array; G, x7 : boolean; E5 : boolean; K : boolean; sI : boolean; Qt : boolean returns integer Jov0, Yk, D5_a, k570a : boolean array; P, zX : boolean; let w8[- 4 - 63] = 9; pop 4; do g3(1, 7); when case 8 : chillax end; while 31 : chillax end end main : w : boolean array; let V[- false] = array - w92(4, 35700) * false or 323 rem not 5790 and 0 - (15500) - 2; pop; when case g and 59 /= 38500 : input Z[6] end case - 778 - 31200 > 45 : do B92(97); output "1" end case 0 = 7 : chillax end case 3 : pop end case 15 : chillax end otherwise : chillax end end
