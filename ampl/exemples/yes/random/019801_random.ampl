program j3 : U : takes Tln, x : boolean array; T : boolean; L : integer returns nothing K : boolean array; Y4 : integer array; Op, I : integer; RlMa, w : boolean; E3 : boolean; do r(NA and 6 <= - 7820 - 1, - 2); when case - 788 - 138 : while 9640 : chillax end end otherwise : let k8 = 4; pop end; pop end Ei : takes Z, hXF0a, L, L, v, Bt3, J : integer returns integer output 6380 end main : Ac, y, G, U, H : integer; G, B, E, N5a0a : boolean; pop end
