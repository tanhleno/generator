program L : U0 : takes MHc0a, mb : boolean array; D : integer array returns nothing while not 3 - 63 - 20 : chillax end; while - 8 = 3 : pop; while 7 : chillax end end end n : takes F, EnH, jb9aa : integer array returns nothing U9R, n : boolean; chillax end Vjl : takes x : integer array; c95, N : boolean array returns nothing Yxg : integer array; kje : boolean; K : boolean; m : boolean; input G[359]; when case 1 : chillax end case 38400 : chillax end; do W6(4); while 8 : chillax end end lC1aa : takes g81a, G : integer returns nothing K, a6 : boolean; while 2 : chillax end; output ""; output ""; pop end h : takes f, q, h69, H0 : boolean returns integer p8 : boolean; A : boolean; pop; let w0 = 5; pop end q : takes IXVaa, P6 : boolean; i8, Tc20 : boolean returns boolean array output "" end main : SL, F7, o8R, aU6a : boolean array; chillax end
