program e : yD00 : takes S, J7x0 : integer; i, q, Hv, I, K : boolean array; Q : integer array returns boolean array d : boolean; z : integer array; A : boolean array; let amK[- 9 and 0] = - 9 - 3; while - 9 : chillax end end m : takes SJ, MB5aa : boolean returns nothing r26a, n : integer; B4, Gg : integer array; chillax end yt0aa : takes cl : integer; c, mL : integer array returns boolean array N4, baka : integer array; chillax end G : takes e, W2I0 : boolean array returns boolean g2 : boolean; let O[36] = array 406; let S = 7 end D : takes g, K : boolean returns nothing output ""; when case 9 : chillax end; pop end a : takes e : boolean array; B : boolean; ui1 : boolean; l7 : boolean returns nothing output "~3" end v : takes xM : boolean; r0 : boolean; Z : boolean returns nothing chillax end A : takes L5n : boolean returns boolean chillax end main : x5 : integer array; do WRy(false or not false or not 54 and 47 = - (6) - not 655 and 94 - 1, cM4 * false and 87900 + true and 9 <= not 775, 9 and 09) end
