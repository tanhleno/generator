program zg : X : takes f9, D : integer; Lu, j : integer array; m96, V8, A, _j, r : boolean; Y : boolean; x, U, s2 : boolean array returns nothing b : integer array; p3, K : boolean; chillax end vu7aa : takes D7 : integer array; Pp, aIV, Z, E : integer array returns boolean m, w0 : boolean array; O, P5y0a, s : boolean array; Kp : boolean; L1 : boolean; j : boolean; chillax end K50a : takes i : boolean returns nothing input qM; output "" end amM : takes b : integer; H10, r, w, x : integer array; K : boolean; L : boolean; c6 : boolean; veba : boolean returns nothing e, TD5 : boolean; nZi0 : boolean; OQ4 : boolean; let xXUa = array 6570 end F : takes z0Xa : boolean returns nothing M3Sa : boolean; xu : boolean; when case 0 : chillax end; do n9(0) end qzf : takes rE : boolean array; TZ : boolean; W : boolean; n : boolean returns integer array let wk5aa = 0 end main : pop; while - not not 5 < - not 7 : while 2 : chillax end end; pop 3 <= 26900 end
