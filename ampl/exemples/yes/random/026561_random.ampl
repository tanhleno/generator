program R1Vaa : P : takes v, B : integer; Wk3 : integer; Zo : boolean returns boolean while - 568 and 7 > - 6070 - 74 : let J = 3; pop; when case 7 : chillax end end; pop 5 = 80; while 7 = 43 : let D_0 = 0 end end B : takes r, pz50a, hV, No : integer returns integer j4, _E, J, z : boolean; pop 93600; let h5 = array 69400; when case 63 : chillax end case 8 : chillax end otherwise : chillax end; when case 3 : chillax end; when case 01 : chillax end end main : MS20a, I, w4 : integer; n, Ls, F : boolean; G : integer; XX : integer array; do xD(- 2 rem Yx(4) + not not 72 * not 12 - (513) and 048 or 03); when case - not 9 > (473) and 0 or 8 - 95 : pop; while 2 : chillax end; do l(82); output "" end end
