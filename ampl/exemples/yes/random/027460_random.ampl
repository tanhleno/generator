program yq30 : UMv0a : takes D, kfP : integer array; f, wk8, i : integer; e66 : boolean returns nothing chillax end V : takes _, Wrgaa, p, T6M, Q : boolean; a, pv : boolean; n, y9 : integer returns nothing while - 99000 - 45800 /= 12 : let n = 0 end; output 3 end lK7 : takes Q9H0, H, P, n53 : integer returns nothing do l7t(871, 43, 7790); pop 2560 end main : m, e, j, h : boolean; e : boolean; F94aa, n : integer; D : integer; Y8, m : integer; when case - false = not false - true : let B = array 61; do Y3t0a(893 = 6590, 61); when case 2 : pop end case 79600 : chillax end otherwise : chillax end; when case 6 : chillax end; input h0I0a; pop end end
