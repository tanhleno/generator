program U1 : Pw : takes j, Oe6 : integer array; i, Lac : integer array; r250 : boolean returns nothing Y : boolean; chillax end e59a : takes r : boolean array returns boolean array w, p, J, yZ9aa : integer array; Wn : boolean array; R3, K : boolean; nM0 : boolean; W : boolean; chillax end j : takes T : integer; cU, c0, F1t : boolean; m : integer array returns boolean array mwN0, j : integer array; Z : boolean; chillax end main : let l[- not false * not(8) / true or not false] = array - false / false and false and 2 + false + false end
