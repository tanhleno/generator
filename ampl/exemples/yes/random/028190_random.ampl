program Y : a49aa : takes h, D0k0 : integer array; Q4 : boolean; mh : integer; i, cA1, KL : integer returns nothing let jBCaa = array(8) and 2420 or 7360; when case - 39 : do Ob70a(6); while 1 : chillax end end case 4 : when case 798 : chillax end; pop end end RK : takes T, mt7, hi5 : boolean array returns nothing w : integer; do FS(51 - 4); while 9 : chillax end; do BX(61500, 429); output ""; do q(1350); pop end ywZ : takes MV, U : boolean; nAA0, JW2, M1 : boolean array; l5, I7V, wN : integer array returns boolean BK : integer array; JbF, j980 : boolean; z : boolean; chillax end Xq : takes hu : integer array returns nothing u, D : boolean; f : boolean; t : boolean; chillax end K0Ma : takes n, Lf : integer array; d : boolean array returns nothing chillax end main : output true - not 4 and 7060 + 87 < true + 83 - 1; output not 2; input W96aa end
