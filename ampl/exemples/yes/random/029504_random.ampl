program vp : o1 : takes i, t : integer array returns boolean P, zi, g : boolean; yv : integer array; zm_a, x : integer array; chillax end x : takes V9p : integer array returns integer E : integer; let yj3 = array 8 - 935 end Ml70 : takes P, f69, Sd, Y9, L : boolean returns nothing while 9 : when case 53 : chillax end; pop end; do za(0); output "" end S9 : takes V73aa, k, U : boolean; sh, j, s : boolean array; c, q9 : integer returns nothing pop end G : takes H, e, s : integer; K, d5h : integer array returns nothing do Y7(03); do Lx(8); pop end F : takes Z, P17a, W : boolean returns boolean array i : boolean; chillax end main : HhDa : integer; W5 : integer; chillax end
