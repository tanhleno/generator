program sn : J : takes x0ra, n : integer array returns integer array B8, U5H : integer array; M, h9K : integer; chillax end f : takes q : boolean; q6N0a, A : boolean array returns nothing chillax end K : takes C, Cs : integer returns integer array pop end U5N : takes Q : integer array returns boolean array S, a : boolean; chillax end main : Ub80, ll, n : boolean array; _, P, K, N, RX, Qv2 : integer; Ql, Uxtaa : boolean array; f : boolean; E : boolean; pop true and n1Baa and 47 >= 21100 - 9 - 02600; while - not not 12 rem s6 : chillax end; let X930a = array not 89 and 11600; while 7 : chillax end; when case 7 : chillax end case 2 : pop end; let f1 = 39 end
