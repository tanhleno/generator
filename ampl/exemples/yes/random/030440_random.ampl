program J : W : takes LdG, vc : integer array returns nothing do j(true and 6 - 3 > - 59600) end V : takes q, Cc : boolean returns boolean chillax end D : takes E9 : integer array returns boolean array H, D1Aa : integer; P, M9 : boolean; output "J" . ""; let M = 69; when case 8 : chillax end end t : takes F820 : integer array; W, ID : boolean; Fb, k, g8 : boolean returns nothing x : boolean; T : boolean; Y : boolean; chillax end N : takes t7, O : integer array returns nothing A : boolean; chillax end Yd_ : takes OG, n : boolean array; J : boolean returns nothing W : boolean; chillax end main : K, c, k, Q : integer; when case - false or _n - false + 13 < - true * F and 00 - false : chillax end case - S(7) * false or w1 : pop 746 end case C0 - 0710 < - 5 : let U[590] = array 06600; when case 3 : chillax end; when case 6 : chillax end end case 1 < 0 : do rc(1); output ""; pop end case 14 = 96 : chillax end case 64 : pop end end
