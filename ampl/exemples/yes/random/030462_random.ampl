program n : DAn : takes X, k : integer array returns nothing FKi, L1, Y, q, _ : integer; let K7ea[- true] = array false end Y : takes D13a, lO5, b : integer array; CG, c, _ : boolean returns nothing H8, PA, Ai3 : boolean array; K : boolean array; S, zVm : boolean; input kBp0a; when case 0 : chillax end case 3 : pop end case 8 : chillax end otherwise : chillax end end zH : takes h3f : integer array; G450a, S : boolean returns boolean x, r, f56a : boolean; P : boolean; Ds : boolean; chillax end E : takes GW : boolean array; K : boolean array; T6, W, U : integer array returns integer array gP : boolean; when case 5 : chillax end; input S end main : input n; when case not not 8150 / not 17 and 505 + u and 1 <= - not 5 : chillax end case - true + 3100 = 15 - 5 : while 40 : chillax end; let v = 777; let _ = 0 end; while - not 4600 and 14 + 1 - 806 : chillax end; pop; pop 983 end
