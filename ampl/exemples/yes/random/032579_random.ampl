program nJ_ : vl1 : takes h, W : integer returns nothing zU, e5, p : integer array; v : boolean; eL1, q1, uMV : boolean; chillax end x : takes j6 : integer; x8, b, n7 : integer array returns nothing j0, L, F7 : integer; Rf : integer; BAa0a : boolean; A : boolean; q : boolean; chillax end _8 : takes E, Y : integer returns nothing _, c : integer array; Mi, _ : boolean; B8o : boolean; let f[9] = 8; output "" end main : eG9, F : integer; do ZjX(97 * jr9(051) * not 1850 + 189 rem not 1 and 8 or 3 and 416 - 7550 - 6, - 39 rem true + K3h and 185 or 414 - 2 <= - false - 2, - 2 and 2 + 58 - 995 = 11); output "89" end
