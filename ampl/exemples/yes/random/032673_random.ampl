program pO80 : R : takes i, Q : integer returns nothing SIc, Y3 : integer; while true and 89 + 141 = - 2680 - 57 : chillax end; let T[- 0] = 56000 = 78; let R = array 8; do T(5); do tJ(7); let a = 1 end B : takes i : boolean array; N : integer array returns nothing G : boolean; chillax end main : let tR[88] = bBL[9] rem false + not 290 and 1 /= false and 50 + 6; when case not 26 : let o[3] = 10; do u7(81, 30); pop end case - T and 6 or 5 - 8860 <= 81 - 12 : chillax end end
