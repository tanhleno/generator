program Y : g : takes a5 : boolean; m, zE : boolean array; vo40a : integer; h : boolean array; M0, gE, X : boolean; B, j, h : integer returns nothing Co9 : integer; a : integer; Tk : boolean; input K7[- false and 49] end s : takes Z : boolean array; X, wo, a64, C : boolean array; I, a4, tB : boolean returns nothing f : boolean; pop end fpV0 : takes M : boolean array; VP : boolean array; B, W : boolean; e9, p2Q : boolean returns nothing U0, c, u : boolean array; do cd(2 = 5, 608) end HGs0a : takes D, Q, n : boolean returns boolean Q : boolean; ch : boolean; Bj : boolean; chillax end O : takes k5, Pd : integer array returns boolean array b : boolean; while 62 : chillax end; when case 0 : chillax end; pop end v4 : takes B, r5y0, y : boolean; Y, P : boolean returns boolean _8Oa : boolean; let g = 6 end D : takes g0 : boolean returns boolean pop end G : takes BB : boolean returns nothing chillax end vk : takes b : boolean returns nothing chillax end Y : takes aV : boolean returns nothing chillax end main : chillax end
