program d670 : A : takes s280a : boolean array; J, i, d, ak80a, _6 : boolean; x, j, j80 : boolean; u, f : boolean returns nothing while - (67) - 0 : when case 8 : pop end end end K5 : takes R1S0a, T, r, U4 : boolean; n, X9 : boolean array returns integer array Tg, lt : integer; Wg9, x : integer; when case - 59700 >= 31 : output "3\t0" end end main : jB : integer; L, wa : boolean array; M9 : boolean array; X : boolean; let Y[07] = true * false - false and 6 < false and 8 end
