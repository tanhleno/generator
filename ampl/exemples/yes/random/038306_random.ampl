program bv : V0c : takes i : boolean array; K2Xaa, V, tw40a : integer array; N : integer; k, J : boolean array; W, fMfaa : integer returns nothing while - false and 09 : chillax end; input d end D0 : takes v, q : integer; r, ps : integer; e : integer returns boolean p8 : boolean array; m5 : integer array; E8Kaa : boolean; chillax end k : takes nZ3aa, Z : boolean array; pd : integer; D : integer array returns integer array n_4 : boolean; chillax end vjvaa : takes q, g, Y, Ux, S6G0 : boolean returns nothing z5 : boolean; t : boolean; chillax end J : takes pU, b, _3, E : boolean returns nothing wJ40 : boolean; e : boolean; chillax end eL : takes w8, C : boolean array; c, a64 : boolean returns boolean x : boolean; do A(7030); pop end main : do Z1y0a(2 or m4b[783] < (6) rem 39 and 5, not not 08) end
