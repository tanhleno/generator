program w : F : takes w : boolean array; V9, al2 : boolean; um : integer returns nothing let z[- (5) and 971] = array - (5) or 1; when case - 7 : input H; do m(2); pop end case 58 : chillax end; output "CO"; pop 8 end G : takes jJ, S9X, I : boolean array; yi : boolean; M43, Y : boolean array returns integer P : integer; x : integer array; output "(" end wj : takes K : integer array; W : integer array returns nothing cR, ES, n : boolean; I, F7 : boolean; v : boolean; chillax end F6 : takes o : integer array; B, t, lp : integer array; pV, sLz : integer array; l : boolean returns integer array cmN0a : boolean; Z : boolean; pop 165 end o : takes c : boolean returns boolean array while 1 : chillax end end aY : takes E, k : integer returns boolean array nb : boolean; chillax end main : b : integer; k740 : integer; chillax end
