program Wg : I1na : takes Q2 : boolean array returns boolean array I, gA60a : integer; l, m8 : integer; g0k0a : integer; while y and 38 <= - 06 : while 8070 : pop end end end K : takes j4, n, zGP0a : boolean returns integer array s, o0, j, N08aa : integer array; q, qj : integer; when case - 6 - 3 >= 57 : chillax end otherwise : let M = 2; pop end end p1 : takes _K, Zzn0a : integer array; p_ : integer array returns integer array U5, gb : integer array; input jPg0[4040] end J : takes U : boolean array returns integer array chillax end j : takes n5 : boolean returns integer array chillax end main : mE, fH7aa : integer array; do W(- not 7, - Rx(4) / not 3 <= - true and 526 or 2); when case - (57) + false and 356 /= - true : pop; do i(3, 281); pop; output "" end end
