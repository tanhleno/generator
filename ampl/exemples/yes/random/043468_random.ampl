program M1 : Z4 : takes M : boolean array returns nothing chillax end j8 : takes w, C : boolean; z : boolean array; E9, at : integer array returns integer G : boolean array; m26 : boolean array; N4, O : boolean; h : boolean; when case - 4 <= 200 : when case 8 : chillax end; output "" end otherwise : chillax end end y : takes l : boolean array; li6aa, X : boolean; gkf : integer returns nothing y6 : integer array; when case 40100 : pop end case 8 : pop end case 0 : chillax end otherwise : pop end end T : takes q : boolean returns nothing input v; let U = 0 end main : f, H : integer; Jnt0, n : boolean; do Q(- (75) rem not not 70 * false and 3990 < - 73 rem false + true, - 2, - not 3940 = 7 - 4); let G = J2 or 4 end
