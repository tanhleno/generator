program Yb : yo : takes KId : boolean array returns nothing chillax end E : takes z : integer; g : integer array returns nothing do O(55 - 2, 5570); when case 89 : chillax end case 4 : pop end end O : takes C980 : boolean; C2g, _, o9 : integer array returns integer B, c : integer; chillax end oP10a : takes N0, xC : boolean array; O : integer returns nothing let OQ[9] = array 3 end F : takes v800a : boolean; y6 : integer array; e4 : boolean; Q0 : boolean returns nothing Y : boolean; do B(5) end main : wq20a : boolean; T : boolean array; qTU0, N : boolean; pJ : integer; output - false + 8 > - (8) and 8330 - 03 . - not 852 and 1 + 4 - 0 . "" . "\nP" . 16500 end
