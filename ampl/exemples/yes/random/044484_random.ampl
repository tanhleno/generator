program a5L : n : takes K03a : boolean array returns nothing z4 : boolean; S630 : boolean array; sc, z93 : boolean; r, p : boolean; l4 : boolean; JF8 : boolean; while true : chillax end; pop 1350 end KA90 : takes o : boolean; J3 : boolean array; A : boolean; m : integer array; pt : integer array; p, N6 : boolean returns nothing let n = array - 6 - 1 end r : takes mA, Y4A, f : integer; B : boolean array; A790a : integer array; Q1, N, g : boolean array returns boolean q : boolean array; Pa, td : boolean; J : boolean; a6t0 : boolean; let e[47600] = 074 end z : takes V, r, z : boolean returns nothing _, Om : boolean; when case 6590 : pop end case 1 : chillax end end main : pop c[3] and not 2 or not 1 <= - 02; input Lc end
