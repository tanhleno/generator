program D : mt40a : takes L9 : boolean returns nothing vCRaa, KH, X9H0a, W04, y09 : boolean; Z : boolean; x9 : integer array; M : boolean; when case - (61) : when case 11 : chillax end otherwise : chillax end; do WI(79); while 8 : chillax end; pop end otherwise : chillax end; while 16 - 53 : do I(5) end end H : takes l, S, h7O : integer returns boolean d : boolean; chillax end k : takes N : integer array returns nothing chillax end j : takes X, M : boolean array; T, V2y, Z : boolean array; s, i : boolean array returns integer let mL[3] = array 3; output "x8" end main : do Z(3 or 26) end
