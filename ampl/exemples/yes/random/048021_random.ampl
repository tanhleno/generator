program W : rIG0 : takes S3P : boolean returns nothing e, V, r5 : boolean array; while - true = - 88 - 60 : chillax end end D1 : takes w, R : integer array returns integer X0 : boolean array; W2, z8 : boolean; let Y[- 8 - 4] = 42 = 37 end G : takes c, C : boolean; NY : boolean array; D, oG30a : boolean; J : boolean; B, T : boolean; Mm : boolean returns boolean let j6a[013] = 7 end D0 : takes t4 : boolean array returns nothing chillax end q8 : takes m : integer; v : integer returns nothing chillax end main : pop; do o(- (84) * true <= (45000) and 14 - 1 - 864, - 5) end
