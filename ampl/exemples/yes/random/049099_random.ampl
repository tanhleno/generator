program Z100a : W1 : takes U : boolean returns nothing when case - (4) - 36 >= - 0 : chillax end; let U2[- 71 - 5] = array - 6 end E : takes S4Aa : boolean; v09 : boolean returns integer input P end o : takes I, T : boolean; Q : integer array; j17, dQW0a, K, x : boolean returns nothing Jl, wrP0 : boolean; output "3r" end E : takes r : boolean array; BJ, I : integer array; O : integer array; m : boolean returns nothing O : boolean; X : boolean; output 56; output "\t?"; while 8 : chillax end; pop end T : takes R : integer array returns integer array kNc : boolean; while 8 : chillax end end main : while not not N or false or true - 507 <= - y / o and 0 + X and 4 : when case 5430 <= 59 : chillax end case 107 : chillax end case 3 : pop end case 1 : chillax end otherwise : while 392 : chillax end end; when case 1 : chillax end; pop; when case 717 : chillax end end; while - 6 * 98 and 29800 + not 1 and 6330 >= - k and 7 - 4 : when case 4 : let Ra7aa = 24 end case 878 : pop end case 2 : chillax end otherwise : pop end; let J7Ga[8] = array 8 end; while - true and 5 : input LNW end end
