program Mr : S : takes v : boolean returns nothing when case - not 0 or 8 - 32 /= 6 : chillax end case 3 : chillax end case 6870 : when case 8 : chillax end end case 39 : pop end otherwise : chillax end; when case 60500 : output "4\taa"; while 3 : chillax end end; while 51300 : pop end; while 0 : chillax end; input UCq; when case 6 : chillax end; pop end R : takes j0X0a, Q : boolean returns boolean pop 5 end main : JY, u, D : boolean array; o : boolean array; when case(146) < 0 : pop 0230 = 1 end case - false = - (3) and 9940 : when case 5290 = 060 : input gr; pop end case 190 : chillax end case 2 : chillax end otherwise : chillax end end otherwise : let Z = array 03000; do i(03, 8); when case 92000 : chillax end; pop; pop end end
