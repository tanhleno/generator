program Pj : X : takes H11 : integer; y32, d : integer; A, c5, sx9 : integer array; f : integer array returns boolean array chillax end uc : takes O : integer array; F0, l : boolean; u, p : integer array returns nothing IZ, G6, r : boolean; T : boolean; pop; when case 5 : chillax end case 1 : pop end case 9 : chillax end end oc : takes xV, _1, in10 : boolean array; E2, ei, NB : boolean; i, i, _7, Dx : boolean array returns nothing do _2P0(4210 = 5); input M[1]; while 9 : chillax end end vd : takes c, N, H : boolean returns boolean while 969 : pop end end main : pop m62 rem not 4 + D39; do Vc3aa(- Mk[3], (42) + 63600 - 89); let Y[(45) - 5] = array - true + 3; output "" . 7 . "u" . "\\" end
