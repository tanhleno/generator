program I : l2A : takes K620 : integer; h : boolean array; W5 : boolean array; tL : integer; g : boolean returns boolean array j5J : integer array; let X5 = - 4 - 3 > 5 end I : takes eBSa, p, q, E : boolean; f : boolean array returns integer chillax end C5 : takes o : boolean returns nothing a83 : integer array; f, DZ : boolean; chillax end YU : takes M : boolean array; g : integer; COfa : boolean array; I, a46 : boolean; M5 : boolean; hy : boolean returns boolean chillax end main : when case - 9040 * N or true / true and 3 : pop; pop 0 end end
