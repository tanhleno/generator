program y : Br : takes H : integer; o : integer array returns nothing E : integer array; chillax end w : takes x6 : integer array; O, C : integer; _, t, I77aa : boolean returns nothing jj9, V, eo0 : boolean array; k : boolean; x0 : boolean; SS : boolean; do l(81 - 73 > 1, 844, 972) end e0g : takes G, K, tl, L : integer array; OTR, Mv, f, S : integer array; J : boolean array; X, kBNaa, wB : boolean returns nothing Z3K : integer array; chillax end wK : takes i, i3, e, s, Cw : integer; lp6 : boolean array; X : boolean array returns boolean array Z : boolean; tO00a : boolean; z : boolean; when case 0 : pop end case 9 : chillax end; pop; while 46 : chillax end end main : Z23, O : integer; let K[(9) rem true + S0 + (3)] = - (0) / 9 - (4760) < - (0) and 47 + 0 - 4600 end
