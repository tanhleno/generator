program X : JPh : takes e : integer array; TJ, M, z, x : integer array; uk : integer array; Y38a : boolean; d5, Me90, B, F : boolean returns nothing let z5 = array not 65 and 681; while 962 : do p(1400); when case 6 : chillax end; pop end; while 9 : output ""; pop end end J : takes y : boolean array; W, p : integer; W, Ler, U100 : integer returns integer array chillax end V94a : takes X : boolean array returns boolean Q : boolean; chillax end l : takes Vgfaa, t7 : boolean returns nothing chillax end GBs : takes x, V0L : integer returns boolean array Y4 : boolean; SN : boolean; input FL; pop; pop end qk : takes u : integer array; f, uN8 : boolean returns nothing B : boolean; output "\t\""; pop end L : takes FV4a, M : boolean returns boolean chillax end main : F0e, N, k : integer; chillax end
