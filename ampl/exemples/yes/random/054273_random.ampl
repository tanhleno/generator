program x : K : takes O : integer array; J, V, F5 : integer array returns integer chillax end O : takes m : boolean array; m : integer array returns nothing vP6 : integer array; output "U6"; pop end e : takes i, I, V6i0 : boolean returns nothing J : integer; h, DBWa : boolean; input di7; do X(2) end B : takes Ql, r, c, J : integer array; I8 : boolean array returns nothing vz3a, c0 : boolean; input D2; let S00a = 74 end K : takes M37, nH4a, y, P0 : integer array; A : integer array returns nothing C : boolean; while 62 : chillax end; do z5S0(5) end k_ : takes f, K6, v42a : integer array; j, IH3 : boolean; kr1aa : boolean returns integer T : boolean; let q = 918 end main : r, I1, zp20a : boolean array; Y : boolean; output not true . "!$aa" . - 06 - 0 < 52; when case - 4 / (9) - not 15 and 91 or 24 - 55100 /= - false : chillax end case not 9 and 4660 - 7 > 9 : chillax end case - 1 - 4 >= 5 : chillax end case 7 = 3 : chillax end case 4120 : pop end otherwise : let l[52] = 9; pop; while 9 : chillax end; pop end; do fIx(- true + 9); when case 92 : pop; output "1\t" end case 0 = 97 : input o; pop end case 12 : chillax end end
