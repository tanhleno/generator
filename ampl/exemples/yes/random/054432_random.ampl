program v : m1Maa : takes x : integer array; B, KcZ : boolean; h41aa, pi_ : integer returns nothing chillax end _ : takes g2, e8C : integer array returns integer array MT30a, V : integer array; d2c : integer array; s0 : boolean; let IL2[4] = 6; when case 0170 : while 3 : chillax end; pop end otherwise : chillax end; while 2 : pop end end main : Bp : integer; e, o : boolean; T, wV, M4 : integer array; E, z : boolean array; y : integer array; when case - not jl(9) rem(402) + true : chillax end otherwise : chillax end; when case R[67] / t7 and 0 or false and 6 + 8710 - 81300 > - 8 or 50 - 23 : when case 33 : chillax end otherwise : pop end; input fa; output "2" end case - H : input v; do n(50600) end otherwise : chillax end; while not 4 /= - 1420 : let r = array 118 end; when case 9 - 84700 : chillax end otherwise : chillax end end
