program k : J_Baa : takes y6D0 : integer array returns nothing chillax end S47 : takes K5, Y0Saa, Xg : integer array; D : boolean; t, aE4aa, s3, OW, j0 : integer array; Jl, M, PW, rl20a : boolean; j4, v : integer array returns nothing C : integer array; N2Q0a, S, z : boolean array; sU : boolean; M : boolean; Y : boolean; chillax end C : takes a : integer array returns nothing pop; when case 8 : chillax end case 256 : chillax end otherwise : chillax end; let v = 4 end M : takes X3 : integer; yc9, T : integer returns nothing D : boolean; Df : boolean; pop 142 end main : let eM8 = - 13 + not 22 or 0 = (7) and 9; pop false > - 5; let L[- not 7] = - 7 < 0; while - 5 : output "\n$" end; do Q(4 = 89, 87, 8); when case 192 : chillax end case 5980 : chillax end; while 8 : chillax end; when case 7 : chillax end end
