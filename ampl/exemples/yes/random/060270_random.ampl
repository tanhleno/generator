program rs : Y9 : takes E : integer array returns nothing R800a, T, vm, z4 : boolean array; FI_0 : integer; let KQJ0[- (28) and 7] = array - true and 6 + 827 end u78 : takes N, O : boolean returns integer g : boolean array; when case - 4 - 2 >= 1 : when case 714 : chillax end; pop; pop end case 86 : chillax end otherwise : chillax end end V9gaa : takes Y, M, r93aa : boolean array; Isi : integer array returns nothing chillax end vB : takes GP, H, z : boolean returns integer o, b : boolean; IW00 : boolean; chillax end main : PnZa : integer array; when case - not(3) * l6C0[87] rem 2 and 9 or true : while - 5330 < 2 : input knW; do x(9); pop end; output 68 end case - true and daEa - not 004 and 15 or 6 - 1 : do EH(95400, 5, 2) end case P74 or 99 - 0 < 53 : when case 9 : chillax end case 5 : chillax end otherwise : chillax end end; when case - true / true : chillax end case - 66 or 2 : when case 2 : pop end case 1 : chillax end end case - 775 /= 61 : do b(45) end end
