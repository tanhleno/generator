program D : ZQ : takes F : integer array returns nothing Axk0a : boolean; A2 : integer; while(7) and 8 - 8 - 1 : when case 9 : chillax end case 1 : chillax end end end X17a : takes X, O44a, OI : integer; L : boolean array; m7N : integer; fF, O : boolean returns nothing I, b, i, E : integer; K : integer array; g, mUK : boolean; U1y : boolean; when case 61000 : chillax end otherwise : let V2 = 19; pop end end qh : takes V : integer returns boolean do p15(05500 = 0); while 1 : chillax end; while 1 : chillax end; do C(7); pop end H : takes T, e : integer array returns integer z1A0 : boolean; chillax end j : takes v6 : boolean; X7 : boolean; Y9Ba, u : boolean; H1 : boolean; ir : boolean returns nothing c : boolean; pop; let Fq = 4 end P8kaa : takes s, O : boolean returns nothing J : boolean; while 659 : chillax end; pop end YV : takes s8caa : boolean returns nothing chillax end t : takes zG : boolean; Q8 : boolean returns nothing chillax end main : chillax end
