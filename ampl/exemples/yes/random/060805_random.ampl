program l1 : B : takes B6La : integer array returns nothing J : boolean; U1 : integer array; ZW : boolean array; H, d9 : boolean; G2Ba : boolean; d : boolean; when case - not 43 >= 5 : when case 9 : chillax end case 9 : chillax end otherwise : chillax end; do A(12) end otherwise : chillax end end I : takes N, YXh : boolean; d750 : boolean array; WnT, z7n : boolean returns nothing pop end N : takes O6 : boolean; RlX0 : boolean; k, W : boolean returns nothing t, v : integer array; O : boolean; d : boolean; when case 6 : chillax end otherwise : chillax end; when case 1 : pop end; while 07 : chillax end end O : takes P : boolean array; WT, IH10 : boolean returns integer array B, J : boolean; chillax end d9J0 : takes l1 : boolean; u : boolean array returns nothing E : boolean; f4 : boolean; let w7 = 1; do Os(2600) end main : E : boolean; i : integer; output false . "" . - 20 - 2 /= 78 end
