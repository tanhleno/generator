program z : S64 : takes E : integer returns boolean oo6, Q : boolean array; _3N0a, iM, dH, T1 : boolean; g, Ou50 : integer array; vi, J : boolean; R : boolean; when case not 41 and 18100 /= 9 : let X[5890] = array 1 end case 03 = 6 : chillax end case 3 : input e end case 2 : pop end otherwise : do y(1050) end end qY : takes T, V5xa, eI, f2 : boolean returns boolean array Z, p0 : integer array; Q2, Rasa : boolean; let R59 = 7 end xO3 : takes VR, U8, H, N, d6 : integer array returns nothing q : boolean array; chillax end gGAa : takes j, k : boolean returns nothing _1, h : boolean; s6 : boolean; chillax end C6 : takes m9Y : boolean array returns boolean array K : boolean; e : boolean; chillax end main : do J6(false < w7[017] + Y3 and 40200, - (9) * not 02300 - 1 >= - not 337 and 3 or 920, - Y and 55700 >= - 7 - 8, 3 - 8 = 2); output - (0) end
