program rS20 : i : takes x1e0 : integer returns boolean let Z = - 4 - 9 >= 00; when case 4 - 50 : output "" end otherwise : chillax end; input zJ[940] end main : d, I2 : boolean; x : boolean; h72aa, Z, F : boolean; G9, l : boolean; let O0[O(3460, 9) / IX - false * true] = - not true rem true or false <= - true and 5 + 4 - 33; when case - not(26) rem not 1 : do e(1, 2420) end case - true : chillax end case 592 - 931 : output "" end; let K = - 1 - 7 end
