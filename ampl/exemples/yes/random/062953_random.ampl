program Q : J : takes q : integer returns integer array y : boolean; g0, Pb : integer; chillax end nik : takes h42, Ap6 : boolean; zO, v : integer; aq : boolean; CB : integer; S83 : integer array returns nothing w : boolean array; w : integer; H : boolean; _ : boolean; output ""; pop end j2 : takes u : integer array returns nothing G, l, B : boolean array; chillax end vU : takes P40 : boolean returns nothing pop 00 end A1 : takes c3, c : integer array; G : integer returns boolean array Fz : boolean; O8 : boolean; while 56 : chillax end end main : pop; when case - (1) >= - J : chillax end case(7) <= - 59500 : let y8 = 68 end case 3 > 57 : when case 8 : chillax end end case 5 : chillax end case 7 : chillax end case 7 : chillax end; let Q[920 and 6] = - 5 end
