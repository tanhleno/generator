program leu0 : U : takes n9D : integer returns nothing Y, I8, G, Y : boolean; input GPz end Q : takes K390 : boolean array returns nothing chillax end main : SLj0a : integer; do B(- (187 = 1) / false * (606) = - 48 / false and 731); do U(- 5 or KV7 and 3 or 85, not 87 and 6, - 02); let x8[- true] = 4 - 60; when case - 58300 - 0 >= 9 : while 4 : chillax end end case 422 : chillax end case 837 : chillax end case 4 : chillax end otherwise : when case 6 : chillax end end; while 0 = 022 : do l(1); pop end; while 1890 : pop end; when case 7 : chillax end end
