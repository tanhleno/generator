program IG0aa : ug1 : takes l0 : integer returns nothing x, o0, F, u : integer array; do m1((0) and 2 - 1, - 1 - 7 <= 7, 4 = 7, 21) end x1 : takes Xz8aa : integer array; _M, R, Oe, ZxGaa : boolean returns nothing chillax end main : l8B, pN : integer array; n : boolean; let P9 = array true * true; when case m(384) : input I6[8]; when case 5 : pop end case 8 : chillax end; when case 561 : chillax end; while 75500 : chillax end; pop end otherwise : while 6 : pop end; input H8 end; input Q7; when case - 081 - 26900 : chillax end case 49600 : chillax end end
