program G : yB : takes k : integer returns nothing a, V, CW : boolean; ad0, o3, d, b2 : integer array; X, Q : boolean array; D18, h4 : boolean; N6 : boolean; I : boolean; let c = 3 = 0 end main : G, Sb, eY, I, S, wC : boolean array; q0, f42a, M4, fp, Z, llg : boolean array; cg6, F, P : boolean; D : integer; X, K : integer; K_, m : boolean; g : boolean; when case(2) * false and(48) and 0 - not true or false or 7 : chillax end; while 6 / 1 and 085 <= RGW0 and 4 or 23 - 7 : chillax end end
