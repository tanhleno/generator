program t : Q : takes J, Pk, M, l0A0a, c, A0, k5 : boolean array; R : boolean; dO : integer array; hm, Q4s0a, _EW, mnr : boolean; E : integer; M : integer; Sq, k6K0 : boolean returns integer while - not 02500 and 7 : while 4 : pop end; input T35a end; while - 665 - 9 >= 25 : do n(726); let i = 935; pop end; do r(9660 = 29); do u(62) end main : R : integer; T5 : boolean; when case - false - false and false - 32 : pop 3 = 8 end case - G860(0) / not 7320 and 42900 - true or 6 <= (92) and 14200 - 73300 - 9 : pop end; let lED = array false / (01); do D(- (65) and 08000 or 5 - 2) end
