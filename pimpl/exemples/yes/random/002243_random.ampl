program k : W : takes B, n3, y, W2, Xm : boolean; CH : boolean; A, Y : boolean array; b, T, zP, a, Z1 : boolean array; jz4aa, ou9a, ta : boolean; _z, B8, i : boolean array; w, X : boolean; A : boolean returns nothing Vp_a, pS : boolean array; gY, q, b, s : boolean array; U, PH30, W : boolean; chillax end H : takes t : boolean array; i, m, u : integer; P120, A, o : boolean; G, S190, D7D0a, i : boolean; Fh5a : boolean returns nothing let d = array - 4 - 540; do d(14 = 0620) end O2 : takes Z, p0 : integer array; g9, C, Tb30 : boolean array; Af : boolean array returns nothing D : integer array; do MT5(31600, 9) end main : output - false rem(7) and 43 - o and 3 > - not 8 and 5 + 5 - 1420 . not 0 and 78 = - 3 - 32; do La30(false rem true, - not 633, 4 <= 779); when case true <= 8 : while 6 : pop end end case 6 : input h6; do C1L(5) end case 9 : input rtY; pop end case 64 : pop end case 28300 : chillax end; input W[- 2]; when case 0 = 0 : let O7 = 5; pop end case 42 : pop end case 7 : chillax end otherwise : pop end end
