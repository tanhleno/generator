program r : B : takes ja9, T, fmQ, r, w : boolean array; y : integer array; W490a : integer; e85 : boolean array; Z : boolean array; D : integer returns nothing input y end tR : takes nd8, L, iR : boolean array returns nothing while - 4 : chillax end; let y = array 4 end p : takes Z3 : boolean returns nothing TO60 : integer array; FX : boolean; O : boolean; V41 : boolean; chillax end main : do B21(- M56(4) * 18, (51200) / true - true < false and 4110, - 8 and 4 >= 5, 461); when case not 5 / not 3 + not 8 - 7 > (33) : when case 1 = 2 : chillax end otherwise : pop end end otherwise : while 27700 : pop end end end
