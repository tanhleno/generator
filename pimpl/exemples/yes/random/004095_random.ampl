program n040 : X : takes WI, t, Z, re5, O : integer returns nothing g, s5, p530 : boolean array; u17, l75 : boolean array; b5 : boolean array; N1q0 : boolean; m : boolean; E : boolean; chillax end eXU0a : takes i : boolean; d, O8 : integer; Da, P4, v4Oaa, V, m2 : boolean array; rB : boolean; bC, _m80a, P8d0 : integer array returns integer Y9 : boolean array; do k(- 3 - 0250 < 43, 4, 9) end m0 : takes A9_ : integer array; P : boolean returns boolean array do X(26 = 9); while 45 : chillax end; while 5 : chillax end; output "*"; pop end D : takes d : integer array returns nothing P, CM : boolean; EvG0a : boolean; chillax end x : takes u9, y, c : boolean returns nothing input d end G : takes nm9a : integer; f8, W7 : boolean returns boolean array p : boolean; chillax end main : do ng40((1620) * (77) rem fs and 57 + (3) and not 4 - (99) and 34 /= - not true); when case - (0) /= - U61 - 28200 - 9 : while 0 : chillax end; when case 8 : chillax end case 7 : chillax end; do z(422) end case 7 + 316 - 1 /= - 0 - 110 : chillax end case 7 - 9 < 1 : let G4P = 7; do Xt(2); pop end otherwise : pop 84700 end end
