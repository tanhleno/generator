program x0 : YL8 : takes xK, p, M8Y, K : boolean; o, i4D : boolean returns integer chillax end T : takes i, T : boolean; _ : integer array; J, i : integer; l73aa, w5Naa, X770a : integer; Ge40 : integer array; X, e : boolean; uL : boolean returns boolean y4 : boolean array; u9 : boolean array; NU : boolean; input d1; input S end Y : takes nxY0a, K, B : integer array returns nothing gF : boolean array; P5, H : boolean; _ : boolean; output 99300 . 2050 . "9" end main : S8, J : integer; while true : pop 2 = 6190 end; when case - false * false and 2 - B : while 779 : chillax end end case false and 66 : let T[1] = array 90 end case 2 /= 2 : while 7 : chillax end end otherwise : while 86100 : pop end end; pop 6 - 47 > 73300 end
