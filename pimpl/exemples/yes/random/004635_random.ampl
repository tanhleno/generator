program R6 : Y : takes v, mrt, Z6, f : boolean; Bv4aa : integer array; UzY, K03 : integer array; L : integer array; q : integer returns nothing let GV = 2 = 8; do Vh(0 <= 12); when case 1 = 395 : chillax end case 32700 : chillax end case 2 : chillax end otherwise : pop end end J : takes Sj : boolean array; zJ70 : boolean; g : boolean returns nothing chillax end main : W7, uz1aa : integer; U : boolean array; B230, U7Ka : boolean array; do X(not false * false, false and false and 21000 - false + 9, not 4 and 5); while - d and not 7 and 86 + not 2 = - false + 2 - 60 : output 0; do ECE(1, 992) end; when case - (2) : when case 0420 : chillax end case 8 : chillax end; pop end end
