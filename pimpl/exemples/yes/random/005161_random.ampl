program l1 : G : takes W58, e15, z, R : boolean array; gLuaa : integer array; b, s, L6 : integer; o : boolean array; VT8aa, r, RYlaa, SL : boolean array; yug0a, zgU, D : boolean returns integer R : integer; C : integer array; chillax end main : gLZ0 : integer; when case 1 and P[7] / true - (19) >= - false - false and 236 - 28000 - 2 : while 3 >= 1 : pop end; let sI20[63] = 19 end case - true * false <= - not 8850 and 60 : chillax end case X2 and 3 /= - 9 - 511 : chillax end case - 8 - 0 : while 6 : chillax end end case 21 : chillax end case 88 : pop end end
