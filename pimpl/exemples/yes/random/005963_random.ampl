program bZ : w_Ha : takes M9, P1, SMd, H : boolean returns integer array H : boolean; l4 : integer array; chillax end s : takes J, N, vI : integer array; t1U : integer array; rM8, j : boolean array returns integer hn : integer; v : boolean array; pop 80 = 7 end w : takes d, Z, W : integer array; E0, B : integer returns nothing t, nw : integer; chillax end c5m : takes d640, d : integer returns integer array j, N8i : boolean; E : boolean; chillax end main : R69a, r : integer array; while - not true * not false / not 1320 and 3 or true >= - false / false - (30) : when case 6 - 7 : while 58 : chillax end end case 9 : chillax end case 28600 : pop end otherwise : output "" end end; when case - 5 * o4F > not 24 and 0 : chillax end otherwise : do TV9(2490); pop end; let hGb[6] = - 4 - 738 < 093; let b1 = 4410 end
