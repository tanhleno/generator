program s1 : JH : takes Nc, O, z, g : integer returns boolean when case - false : do Nn(2, 02) end otherwise : chillax end end S : takes v2Q, j, G3 : integer array; d : boolean; J3, Gd, UN0, Z, Gx : integer; p0, r, XF10a : boolean array; _K3, G : boolean; I0, f9 : boolean returns boolean _ : integer; chillax end main : Xs, M : boolean; h : integer array; N : integer; I7, J7 : integer array; C, _G, _gL : boolean; e : boolean; n : boolean; p : boolean; let N[- false and(818) - false + true or 705 - 7] = array - 55 * (9) rem n and 020 - false rem not 5 + not 3 and 8 end
