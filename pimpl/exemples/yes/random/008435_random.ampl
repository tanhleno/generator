program ohK : Lx80 : takes z49aa, r, Mc : boolean; e, T6, NB6a, y, _, E : boolean array returns integer array let z[- (5)] = array - true; input so end r : takes _7m : boolean; f7, j3 : boolean array returns nothing I7 : integer; chillax end h : takes X : integer array; ao, Z, G, Cvj, H : integer returns boolean array P, S4, i : integer array; input T5[6]; while 0 : chillax end; while 4 : chillax end; while 84 : chillax end; pop end o6 : takes c : boolean array; k : integer array returns boolean chillax end B : takes P, K : integer array; u : boolean returns boolean while 68 : chillax end; output "#" end a : takes ba, Q : boolean array returns boolean chillax end qz : takes H10a : boolean returns boolean pop end v : takes e : boolean returns nothing chillax end N : takes S3 : boolean returns nothing chillax end P : takes _ : boolean returns nothing chillax end main : gD, w78aa : boolean array; r : integer array; jw3aa, k2K0a, p : boolean; Rj : integer; p, I4 : integer array; let M = not not 1 + true; output ""; when case - not 1 and 7 + 4 : do B2xa(68, 57); pop; output ""; pop end; pop; do i(8 = 511) end
