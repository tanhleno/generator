program Dd : FY3 : takes ml, v, b3Iaa : boolean array returns boolean l3, r, c, rF1, Uy : integer; when case - false and 1 : chillax end otherwise : chillax end end yi8 : takes I, C6 : boolean; W, UMY, q, Z9 : integer returns nothing let hGN[- 1 - 95] = array 8 end S9v : takes s4, S88a, H6g, Z2, e : boolean array returns boolean array chillax end z : takes lM9 : boolean; I, QFj, D, P : integer array returns boolean array r0X, a : boolean; w5y0 : boolean; Gz : boolean; let K[86] = 7 end main : R2 : boolean array; do K(true or 1 and Od - not 48 > 11 rem true and 6 - not 4 + 57 - 50); do As9(- false and true and 797 + true and 1 or 4 /= - false and 1 + 7, 0 and 8) end
