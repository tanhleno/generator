program aZ1a : YL : takes x, r, d : boolean returns boolean array V1, KN : integer; J2C0a : integer; m1 : integer array; GN40a, c : boolean; Ao9 : boolean; RK70 : boolean; while - not 69 and 544 - 613 : chillax end; when case - 2 : chillax end case 6 : chillax end case 2 : chillax end; pop 4; when case 9 : chillax end case 95 : chillax end otherwise : chillax end; do K9(34) end main : let _W[- m * JSB(0) / 0 and 1 or H87 * false and 6] = - (9) + G and 7 - 1; when case - 2 : chillax end case false and 20400 = - 74 : output 5; pop; when case 6 : chillax end; pop end case 5 - 8460 : input v9 end otherwise : while 0 : pop end; when case 1650 : chillax end; pop; pop end; when case - u130a and 198 : chillax end case 05 - 21 = 452 : chillax end case 2 : chillax end case 451 : pop end otherwise : let E = 2; pop end; when case 0 - 6 >= 83300 : while 53 : chillax end; when case 104 : chillax end; pop end otherwise : let A = 2; pop end; while 0 = 6230 : chillax end end
