program _0 : Jt : takes M, Lyz0a, N8 : integer array; lK1, i760 : integer; m1, J : boolean array returns nothing gG, M, J, Z : integer; let yjg[- 8] = array 1 and 3; when case - 9 - 43 : chillax end otherwise : chillax end; do K(17) end U320a : takes S : integer; ca0, yD, DZ, O21, p0J, V : boolean array; b : integer; BO6, LT, Jz30a, N : integer returns nothing do Vw(0 - 0 <= 66); when case 0 = 8 : chillax end otherwise : chillax end; let F[994] = 25500; pop; do AZr(24) end J : takes a, g8C, T : boolean returns integer array R, c : integer array; b27, d : boolean; O : boolean; A08 : boolean; pop 88800; input r end Y : takes w : boolean; NS, T00aa, Y6, c : boolean returns boolean qF : boolean; k : boolean; fw : boolean; chillax end LZP0 : takes X7z : integer returns nothing O : boolean; Y : boolean; do P1t0(48) end MR : takes fI, b : boolean returns integer array U0 : boolean; do i3(951); pop end U : takes U3V0a, m8 : boolean; q : boolean; C : boolean returns boolean chillax end U7 : takes Zwc0a : boolean returns boolean chillax end main : output "}40" . 3; let J = 2 and 9 < - 6 - 13; output "58aa" end
