program Z : Ig1 : takes iB, M, k : integer array returns nothing s, H : integer; pop end n0 : takes _, y, V, P520 : integer array; m9, Gn : integer; Q, L : boolean returns nothing R, g1a, OQ, HBZ : boolean array; R, H, X : boolean; input ki; do ZE3(4); input z end T : takes k : boolean returns nothing J9, wT5aa : integer; B5r : boolean; let l[0] = array 75; let K9 = array 238 end W : takes qDnaa : boolean returns nothing w : boolean; when case 6480 : chillax end case 06 : chillax end otherwise : chillax end; let e = 2; do V0J(3) end l : takes u7 : boolean; p5 : integer array; J, Gv : boolean; P : boolean; tA : boolean returns nothing chillax end y : takes md : boolean; hj, aQ : boolean returns integer i : boolean; let T3 = 3 end main : do TN(- (60) or not not 0 + true - 181) end
