program BZ : eid0a : takes N1Daa, P, yiU : integer array returns nothing m : boolean; L, R : boolean array; k2Q0a, Idt : boolean; Pz2aa, esVa : boolean; L73 : boolean; z : boolean; chillax end main : f8, tW, j2, D, c : boolean; Sm : integer array; Am : boolean; while - 3 and _[121] < - 991 : pop; when case 54 = 4 : when case 9 : chillax end end case 8730 : chillax end case 352 : chillax end end; when case - not not 61 and true and 1 or false : pop 3; let d01[067] = array 12500; while 8 : chillax end; let h = 610; pop end case - 6 and 84 >= 2 : output 1 . "" end case 836 - 95 : when case 63 : chillax end; let pz = 8; pop end end
