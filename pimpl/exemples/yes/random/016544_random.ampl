program I6 : sf2 : takes s, O, D : integer returns nothing let wY[- not 6] = - 7 /= 563 end main : when case 3 rem not true * k : chillax end case - true rem not 4 and 0 : output 1 end case - true and 0 : chillax end otherwise : chillax end; when case - true rem 8 and 43 + S + 21 <= true and 4 or 50 : while 7 = 5 : do h(85); pop end end case z650 or 0 - 07 : chillax end otherwise : while 13 : chillax end end; pop; input _[- 7210]; when case 7 = 3 : chillax end case 121 : pop end case 493 : chillax end otherwise : chillax end end
