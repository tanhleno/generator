program S4O : _5 : takes K, c : boolean array; SA, j, d9, t, _ : integer; k, g : boolean array returns boolean chillax end LV : takes YX8, zT : integer returns nothing w, B, X73, _ : boolean; g, Z : integer array; v, N : boolean; pop end R : takes B, Qd, X_, t, G : integer returns nothing O : integer; when case 4 : chillax end case 5 : chillax end; let t = array 18; do aC(3); do X3(5) end main : pop; when case not true and(6) and 89 + m and 43 - 2 : chillax end case 6 and 97 <= - 8 - 80 : while 5 : chillax end end case 6 - 493 : pop end case 2 : pop end end
