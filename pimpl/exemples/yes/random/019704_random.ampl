program Y : C : takes qCs, Q : boolean array; qF : boolean; Rmn0, E : boolean returns nothing n : boolean array; when case false and 2 : chillax end otherwise : chillax end; let I00[- 30] = array 64200 - 5; let U = array 91; when case 09 : pop end case 1 : chillax end otherwise : chillax end end X : takes a9, G : boolean; K, v06aa : boolean array; Lz, o6 : integer; t : boolean; cHZ0a, C : integer; V : boolean; W : boolean returns nothing p : boolean array; while 3 : do C(3); while 5 : chillax end; pop end; let z[70] = 97 end o0 : takes ql : integer array; e5, t, bq0 : boolean array; w : integer; a7 : integer array returns boolean array WYl : boolean array; when case 531 : chillax end otherwise : pop end end main : V6, SBmaa, o, p, X7, E, eP : integer array; be : integer; d, A8, Bm, xZR0 : integer; S, r : boolean array; S, N2 : boolean array; chillax end
