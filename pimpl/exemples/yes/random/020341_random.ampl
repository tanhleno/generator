program a0 : YB : takes L, P720a : boolean array; By : integer; k : integer; m1Na : integer array; c97, F7A, Ss : boolean array returns nothing let d52a = - 3 end t : takes j : boolean array; C : integer returns nothing g : boolean array; m63, u : integer array; J : boolean; T : boolean; S : boolean; chillax end O : takes o : boolean array returns nothing while 35700 = 68 : chillax end end Q : takes oT, VW60a : boolean returns integer hu0 : boolean; j3w0a : boolean; chillax end d5 : takes L4 : boolean array; K, J4U0a : integer; g, J7G : boolean; DY : boolean; o5P : boolean returns integer do R3(7); pop; pop end main : K : boolean array; l : boolean array; r : boolean; E : boolean array; when case - (21 = 0) + (7050) rem true and 6 + not 2 and 71 = - 125 : chillax end case - (4) * 668 - (8) and 2 + 0 <= false + 8 : pop 4; when case 7 : chillax end case 2 : chillax end otherwise : chillax end end end
