program d : _ : takes c, fs_0a : boolean array; E : integer array returns nothing gzV : boolean array; input n5[- x]; do r(7 - 1); output 0 end Y08 : takes R1, d, s7, t : boolean; X6N0a, uA1, d3 : integer returns nothing G48 : boolean; chillax end D : takes D : boolean array; C, uz, B, u, y : boolean array returns integer C77 : integer array; chillax end main : x4Maa, D, o : boolean array; L, q : boolean; when case false : pop 5; when case 9 : chillax end case 37100 : pop end case 12 : chillax end otherwise : pop end end case true * (1) + not 6 : chillax end case - false and 5 or 8 - 53 > - 004 - 7 : do z8M(75) end; input ks; pop 8 - 0 < 876; do AG(- 84 > 2970); while 36 : let n9 = 7 end end
