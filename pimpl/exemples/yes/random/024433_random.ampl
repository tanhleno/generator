program P : S : takes Ev, xL0 : boolean returns nothing Z : boolean; v16, i : integer array; U5 : boolean; L, f1 : boolean; do o7(8); let K[06 - 800] = array 5 - 8 end eh7a : takes aW : boolean array returns nothing do iU(21 - 44); do mD80(47, 5); let G[9] = array 77; when case 95 : chillax end end G : takes X2fa, x, a : boolean array; tLx : integer; n9, Z, xI, m8 : integer array; K1, Y8z0a : integer array; z, G : boolean; LAn : boolean returns nothing _lL, C7 : boolean; chillax end W : takes G : integer array; f, tj0 : boolean array returns boolean array DS, we : boolean; A : boolean; N : boolean; output "\n6!"; do q6(2); input P end main : chillax end
