program d : l97 : takes V, z : boolean returns nothing u : integer; oK : integer; input I; output "]" end i : takes p, v_, a83, V4 : boolean array; V, a20 : integer; AZ, u : boolean array; eG5, r, t : boolean; d : integer returns integer input fot0[- 0 - 5] end v : takes w6a0 : integer array returns integer array sxpa : integer; A : boolean; H : boolean; m : boolean; do r(7960 = 9, 1, 9); let w[2] = array 2 end M7 : takes E3 : integer array; w : boolean array returns boolean chillax end main : when case not(8) / T[2] / 1 + D + 8 and 54 + 6 = - false : when case 7 - 42 > 59 : chillax end case 32 = 5960 : chillax end otherwise : chillax end end otherwise : while 4 : chillax end end end
