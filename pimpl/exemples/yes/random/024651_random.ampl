program MR : R : takes r, sJB : boolean returns nothing n : integer array; let SsWa[1 and 2] = 8; when case - 1 < 81 : pop end case 341 : let I8m = 8 end case 9 : pop end case 4 : chillax end otherwise : chillax end end ZX1 : takes E_, cMM : boolean returns nothing chillax end main : a9n : boolean; do B(- 01 > - true + x and 9 + 161 - 8, - true rem not 3 or not 32700 and 862 + 6 - 71 > - false and 5 + 0, - true and 6 or 4 >= - 6, - 9 - 477, 37600, 0, 33); input n[- true * not 1 and 72 - true] end
