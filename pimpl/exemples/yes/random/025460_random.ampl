program AGX0 : J_0aa : takes e, k : integer; wfVa, d : boolean; w : integer; v : integer; h : boolean; Xt5 : integer; eS, eN8 : boolean returns boolean array I : boolean array; Z : boolean; output - 0 . "z" end Rt : takes aaT0, I : boolean; ZZU, t0, QW, t : boolean; AF, dj : integer array returns nothing h, ed : boolean; E : integer array; chillax end B : takes ULyaa, wKj, i : integer returns nothing when case 2 : do gb(0290) end case 3 : pop end case 28 : chillax end otherwise : pop end end S : takes a, Th : boolean; C4 : integer; d : integer array returns nothing when case 577 : pop end case 45400 : chillax end otherwise : chillax end; let TW = 00000 end G9 : takes gi, H67 : integer array; K : integer array returns nothing f : boolean; chillax end w : takes QEd, r5a, iJ2aa : boolean returns integer array S : boolean; chillax end V : takes em, u : boolean returns boolean chillax end RF1 : takes V : boolean; K : boolean returns nothing chillax end main : r8, A, k60a : integer; let L[- k[6]] = false > 7 and 34300 or 505 - 6; when case - (9) : chillax end end
