program nK : vXRa : takes Nn, T5 : integer; Q, gN : integer array returns nothing X, m : boolean array; chillax end CT : takes L, R : integer returns boolean j4, n, x : integer; B, A, Wl6 : boolean; IBR0a, jRh : boolean; while - 00 : pop; let O = 8 end; do a(00); let v = array 92 end G3D : takes YH : boolean array returns boolean array N : integer; p, v4O : boolean; KI : boolean; chillax end LP : takes I : boolean; f, F : integer; y31, v34 : boolean array; o, w : boolean returns integer chillax end h : takes jd : integer; i : integer array; hC90, Xz : boolean; A : boolean returns boolean Ld : boolean; h : boolean; chillax end main : u5E, r7, y : integer array; do q(- 7 + W[09400] / (3) and 8 < - false); output - 76 + 09; when case - true and 1 + 1 - 6 > - 2710 : let V8J = array 03 end case - 4200 >= 39700 : chillax end case 7 : when case 4 : chillax end end case 776 : pop end end
