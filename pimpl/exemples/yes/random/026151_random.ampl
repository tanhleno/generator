program V : t5 : takes Z060a, vTda : integer; q7Ca : boolean array; j6, H : boolean array; _ : boolean array; Lgcaa : integer returns integer array g, q : boolean array; p2, L3, T, V : boolean; n7Naa, Z_v : integer; when case - 2 or 87000 : chillax end; pop 8; do pu(2); while 4 : pop end; let j0 = 8 end r1 : takes n : integer array; N950, F8 : integer returns nothing ru : integer array; Iq : integer; let d[4] = 4310; do T(08 = 7); when case 9 : pop end; when case 1 : chillax end end K : takes q280a : boolean; o, nFd0, T0, i : boolean; y : boolean array; j : integer array returns integer while 9 = 60 : output "" end; when case 6 : pop end end main : p3i0a : boolean; b : boolean; input D[- (3 = 5) and(2)] end
