program P : di40 : takes onX0, SGp0 : integer array; Cz0, Y : boolean returns nothing O2, v, MW : integer array; d : boolean array; f : integer; WQ, Y6 : boolean; let n[- false] = array - O and 582; while - 00 < 9 : chillax end end ak : takes G : boolean; W : boolean array; d4va : boolean array returns nothing let C7 = array - 0 - 2; while 0 = 24 : chillax end; let c[6] = array 9 end vQ8 : takes VW90a, z6ha, W : integer array; h, x8, Rm, F : integer array returns nothing K, ChB0a : boolean array; chillax end B : takes _ : boolean array; H, E, S9, sV4 : boolean array returns boolean array pop; when case 0 : chillax end end n : takes V : boolean returns integer nu30 : boolean; w43 : boolean; output "" end ky : takes tq2 : integer; W4o0 : boolean returns boolean array pop; pop end main : Ab, p, u, Q, U, H : boolean array; VK, Mu, c : integer; D7, i, j, MKma, h : integer array; l : boolean array; Y : boolean; chillax end
