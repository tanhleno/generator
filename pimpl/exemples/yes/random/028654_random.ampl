program B : c : takes Q, W2 : integer array; D : integer; C, m, y : boolean; a : boolean array; vC8, OC : boolean array returns nothing _2 : integer; tC1, r8La : boolean array; _k8a : integer array; chillax end E : takes v980, A : boolean array; vQ1, r6, hH1 : integer returns boolean array mK7a, mI, u1M : boolean array; P : boolean array; l : boolean; M75 : boolean; chillax end main : do QWJ0a(Z(0950, 1330) * 1 + not not 22 + 8 and 0 or 796); when case - false - true - 1180 - 3090 : chillax end case - true and 41 : pop 2 end case 2 - 96 : while 3010 : chillax end; let l1 = 8 end case 50 = 55 : while 81000 : chillax end; pop end otherwise : pop 07; do _(4130) end end
