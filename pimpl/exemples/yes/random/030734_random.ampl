program X : F2 : takes at, J6U : integer array returns nothing m : boolean; EM : boolean; chillax end c21 : takes T, S, F0J : integer array returns integer N : boolean; when case 2 - 066 : chillax end otherwise : pop; pop end; do V(9 = 254, 7); when case 8 : pop end otherwise : chillax end end G : takes A51, h, y3 : integer; m, O13a : boolean; fp8a : integer; D, BP, _ : boolean array; G, l7Na : boolean; i3 : boolean returns integer array sH7 : boolean; DAN : boolean; chillax end Gj : takes t, Vo30a : integer array; HxA : boolean returns nothing t, g950 : boolean; k2z : boolean; let f9w0a = 91 end a : takes xB3aa : boolean returns boolean yHr0a : boolean; let DH4a = 65; do bh(22); pop end jd : takes tc5 : integer; n, W : boolean returns nothing R : boolean; while 964 : chillax end; pop end _I : takes R : boolean; N : boolean returns nothing b : boolean; pop end k54 : takes c : boolean returns nothing chillax end xx6aa : takes U : boolean returns nothing chillax end main : DZ : integer array; pop - B(64) - 38 and 0 end
