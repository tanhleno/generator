program M4 : YvI : takes s23aa, E0da : integer array returns nothing let kS9 = array true or 9; when case - 2 - 46 >= 8 : when case 6 : chillax end; output "5"; pop end case 8 : do O(3); pop end case 4390 : pop end case 5 : chillax end; when case 3 = 4100 : pop end case 00 : pop end case 11 : chillax end; input R[95]; pop; when case 92 : chillax end; pop end s : takes l2, S : boolean array; tX : boolean returns boolean array do nG(407) end Z : takes y, Ip : integer array returns nothing pop; while 95 : pop end end E : takes N, e, _x0aa : boolean returns integer do Yw2(66, 43) end lP : takes X : boolean array returns boolean chillax end cf : takes z6, xw, xetaa : boolean array; d7, He : boolean returns integer array b20 : boolean; while 7 : chillax end; pop end T : takes N1, Jd3aa : boolean; l : boolean; n : boolean returns boolean N : boolean; pop end E1y : takes H9g0 : boolean; K2 : boolean returns boolean chillax end w4 : takes _u : boolean returns nothing chillax end main : G51, o : boolean array; x3, L, rLZ, x, xl, H6 : boolean array; do D((118 = 4) - not 74 + false or 6 < - not true / 7 and 20100 or not 8 and 4 + 6, - not true /= (5) and 1); pop; input E0 end
