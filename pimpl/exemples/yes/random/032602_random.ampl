program f : J6 : takes c, jS : integer returns nothing C, I : boolean; h6, Y_9 : boolean array; do Vj7((73) > 4, 6, 64 = 78, 1); let R[057] = 704 = 63; input o3; do b9(6) end R : takes m : integer array; ft, H4, R7h, H4, l610a : boolean array returns boolean uG, y4 : integer; chillax end f : takes g33aa : boolean array returns boolean array l, r130 : integer; J, X : boolean; input x5x0; input E[9]; input G; while 378 : chillax end; pop end i : takes v9, n : boolean array returns nothing M, LqUa : boolean; U : boolean; when case 8700 : chillax end case 5 : chillax end otherwise : chillax end end X4 : takes QK, c : integer array; t : boolean returns boolean array pop end main : j : boolean; C, DP, VI7 : boolean; when case - 3 rem 455 - xGV0 : output "3" . "" . 240 . "" end case - true or false > not 414 and 5 or 7 - 3 : do N8(01, 02500); input I9R[63]; pop; do B(29) end otherwise : when case 7 : chillax end; when case 2 : chillax end; while 3 : chillax end end; while zd2(3) - not 38100 and 36 /= true and 80 : chillax end end
