program jn : t : takes Ub, m : integer returns nothing p, w : boolean array; s, q : boolean; chillax end M : takes O : boolean array; zQsa : integer; y39, m9 : integer array; E3 : boolean array; W4Caa : integer array returns nothing do A(3 - 5370); pop 72; let a[5350] = array 19 end b : takes TU, y, J010 : integer array returns integer chillax end i : takes jO : boolean returns integer array q, _ : boolean; while 97200 : pop end; while 93700 : chillax end end J2w : takes w8A0a : integer returns nothing chillax end Oo : takes Z4, k6d0a : integer array returns nothing chillax end e : takes o1b0, Q : boolean; i1 : boolean; n : boolean returns nothing chillax end cn : takes Iloa : boolean; Hj : boolean returns nothing chillax end main : t : boolean array; vd, ll90a : boolean array; k, i2Y0, g6, Tu : boolean; output - true rem false or(4) <= true . "" . 4 = 78500; pop; when case(660) - 7 : chillax end otherwise : pop end end
