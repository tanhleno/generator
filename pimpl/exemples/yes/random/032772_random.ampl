program MJ : R : takes Y8, IJF0a : integer returns nothing I : boolean; while false : output "0"; pop end end ZQ : takes N : boolean; E, J, f5, l : boolean returns nothing k, y : integer array; while - 8 = 77 : output "" end; pop 9; do K(7, 3) end Rs : takes k, I : integer returns integer array chillax end main : v, SL : boolean; o : boolean; pop J(745) * false - true and 3 + 35000 - 341 <= - 2 and 5 - 99; let qE[(5) rem false + 2] = array not(9) rem not 3 end
