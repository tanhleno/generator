program U : MK4 : takes K, v : integer returns nothing pop; pop 6460; input Q; input Q; do r(5) end Gf : takes f19, u : boolean array returns nothing Y7 : integer; chillax end x : takes tD : integer returns boolean VFJa : integer array; dlK : boolean; j_9 : boolean; I2 : boolean; input A; do v0(8, 21) end jS3 : takes t : boolean array returns boolean array l : boolean; y9 : boolean; r_ : boolean; input h1Uaa; pop; let Tpj0a = 3; pop end main : gr9aa : boolean; when case - 40 : input C[- 32]; do L(54) end case - S(4) / k and 82 + 9 and 8650 - 28 <= true and 1 or 56 - 06 : while 0 : while 0410 : chillax end end; pop 6 end end
