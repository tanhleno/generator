program x : bJRa : takes C : boolean; h5, y, bQ, B : boolean array; JA : integer; J : boolean; lD : integer array returns nothing Jp, Y, w, x, n : integer; a : integer; PL, ThV : boolean; L : boolean; when case i : pop end otherwise : while 4 : chillax end; when case 1470 : chillax end end end J : takes x : boolean returns nothing R1T0a : boolean array; when case 1 - 4 /= 6 : while 4 : chillax end; while 1 : chillax end; pop end end j5G0a : takes JAA, T, wca : boolean; n, j, b : integer; FFe0a : integer array returns boolean array pp1, s1 : boolean; output 0 . 23; when case 1 : chillax end otherwise : chillax end; let g = 9 end K5 : takes N, rM : boolean array; o2, R7 : integer array returns nothing c, YA : boolean; when case 110 : pop end otherwise : chillax end; let V = 87 end v : takes fqPaa, uN : boolean; HS70, c : integer array; g3 : boolean; I : boolean returns nothing i : boolean; chillax end main : H, X75, H : integer; when case false rem 5 rem false or not false and true and 826 + not 7 and 9 : chillax end case 0 or(2) /= - 9 and 7 : when case 7 : output "" end case 7 : pop end case 49 : chillax end; do r_8(15, 91) end case true + 5 : chillax end end
