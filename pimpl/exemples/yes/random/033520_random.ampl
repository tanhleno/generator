program Z11a : a : takes t8 : boolean; _, a, X, f : boolean array; t : integer array returns boolean array O0 : integer; H1, P, K, v : boolean; pop; let WE1[- 5] = array - 9 - 139 end u : takes UXF : integer returns integer H0, Z62 : boolean array; O, c, O : integer array; chillax end xDg0 : takes N8, G, X9 : integer array returns integer while 3 = 39000 : pop; pop end; when case 35 : pop end case 2 : chillax end otherwise : chillax end; pop; output "" end main : Z, K, b : boolean; M, xn70a, a7Ra : integer array; when case - (7760 = 4) * 3 = false and not 193 and 066 + not 347 : when case - 5 - 9 /= 0 : chillax end case 8 : output "" end case 13 : chillax end end case 7 / 7 /= V and 32 + 3 - 3 : when case 40 : chillax end case 33 : chillax end case 576 : chillax end otherwise : chillax end end otherwise : while 2 : pop end; output "" . ""; do j(2); do O(1); pop end; output "" . - 170 >= 0; let MJc[not 2 and 6] = array not 6 end
