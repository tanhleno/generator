program a : JH2 : takes tJPa : boolean; v1, K, VN : boolean array; X, k, M1 : boolean array; KB, i, J, z55aa, Zp : boolean returns nothing Kc, E590 : integer; C : boolean; let p53[(07) and 8 - 92 - 4] = array 2 and 2; while 2 - 58 < 78 : do oC(02); output "2\t" end end k : takes qo, _ : integer returns integer w : boolean array; chillax end main : when case - 64 + 0 and(8) and 48 : pop end case Uh[2] or dK and 18 + 0 - 640 : chillax end case - 06 : pop; when case 4 : chillax end end case - 82 - 0 = 7670 : input e; while 1 : chillax end; pop end case 6 : output ""; pop end; when case(70) rem not 3 and 550 : while 151 = 16 : chillax end; pop 19600; do FC(78400); while 5 : chillax end end case 3 + 9 - 73 = 0 : let q = 3 end case 7 /= 590 : chillax end otherwise : chillax end end
