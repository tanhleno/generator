program r : _270 : takes D : boolean; q, V, K : integer array returns integer array b9P : boolean; chillax end R : takes Me, A1 : boolean array returns boolean let MRb[0 - 641] = array - 29400 - 73600; do f5f(9 = 57); let XrJ[2980] = 3; while 08500 : chillax end; do T9(881) end Ksi : takes t, BU : integer returns boolean array let i[40] = array 3; when case 6 : pop end end main : b9, E : integer; k, Y, n0 : boolean array; when case - c0J : while - 6 : chillax end; input r[1] end case true + (0) - 86 : chillax end case not 4 : let zpL0 = 61; input _ end otherwise : let f8[31] = 58; when case 1 : pop end case 35 : chillax end otherwise : chillax end; while 2 : chillax end; do Y710a(2); pop end; output ":"; while - not 83 > - 3 - 243 : chillax end end
