program p1 : m : takes X020 : boolean; e, ap3 : boolean returns nothing z45, F2, Q9, IW, I : integer array; when case - true /= - 8 : do D(8, 7); let R = 90 end case 65300 - 26 : pop end otherwise : input z; when case 9 : chillax end end; input Zx3[0]; do d(2 = 32, 9770, 7) end SJ : takes Z, k6, w, v0, j, INe, q : boolean; l50a : boolean returns nothing S : integer; chillax end J : takes R : integer array; X, _Y, f : integer; Z, t : boolean array returns boolean array y2, R0Z : boolean; do Pz(7); while 97 : pop end end Va : takes BEVa, q : boolean returns nothing chillax end CP : takes N : integer; L3q, b : integer; D3 : boolean; i : boolean returns nothing e : boolean; f : boolean; chillax end l8 : takes L : integer; F, D : boolean returns nothing chillax end main : while - (6 = 150) > 0 * (90) + 5060 : output 7 end; when case - false >= S : let x2 = 5 end end
