program O : l29 : takes Ef_ : boolean; AY : boolean array; nT, H0i : integer array; b : integer; G1 : boolean; yN, H, k : boolean array returns nothing d : integer array; let R = - 6 > 5 end L : takes c6, Gy, X : integer; Xx, Ns : integer array; O : integer; n : integer array; H : integer; DO : boolean returns nothing R, n, A : boolean; O, c0, H : boolean; T : boolean; c : boolean; GLk : boolean; let k = 322 = 00 end lRL : takes Q : boolean array; Z3G0a : integer returns boolean array chillax end dOb : takes w : integer array; F : boolean returns nothing pop end D : takes A : integer; h : boolean returns boolean B : boolean; L : boolean; while 9 : chillax end end q : takes A, G6_ : boolean; Dq9aa, s1 : boolean returns boolean R : boolean; while 2210 : chillax end end y : takes k : boolean; L : boolean; _q : boolean returns boolean R0 : boolean; pop end U : takes t : boolean; w : boolean returns nothing chillax end main : O8, PG, m, G, d, S6g0a : boolean; do m1(- sz[19] rem not 09 and x <= - 43300 / (9420) - not 021 and 67 - 63 - 9, true > - true and 98, 1 and 371 >= - 87 - 2) end
