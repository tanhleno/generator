program ye9aa : unS0 : takes d : boolean; k : boolean returns boolean let H7V[(2) and 2] = array true end l59 : takes fz : boolean returns nothing do gU(- 71 - 044 >= 40, 1 = 8); let v = 7 end A : takes t, N : integer array; H, k, CA : integer returns nothing x8 : boolean array; R3J : boolean; when case 54 : chillax end case 56 : pop end otherwise : pop end; do Rf(0); input mE; let F = 8 end main : y, U0 : integer; a, V, v7, iP80a : integer; A : integer; T, b : integer; do B(t9 and false * not 4 > - not not 7 / true and 06, q * 5980 /= - true, - false and 27, 3 /= 02, 45, 61); while - true : pop 39700; while 59 : pop end; while 455 : chillax end end; while - (01800) or 417 /= - 0750 - 2 : chillax end; output 2 = 318 end
