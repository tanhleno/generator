program A : X : takes f : boolean; _p2 : integer array; xK, SV : integer array returns nothing input y[- 8750 and 23]; when case - 3980 - 355 : do o(6); while 72 : chillax end; pop end case 8 = 48 : do z(0) end case 7 : pop end case 46 : chillax end end Q4s : takes X7r : integer array returns nothing input K9[- 70]; let gc_[8880] = array 424; input d2Saa[270]; let b = 7 end F : takes D : boolean array; j : boolean; C, Aq, z : integer array returns integer array input x1; while 317 : pop end end main : let L = array 5 or true * false; when case false and 0 and 9 = - not 39 : input W[1]; let v[4] = array 6 end case - true <= 6 - 32 : do Xo(1, 6470); while 345 : chillax end; when case 707 : chillax end; pop end case 6 : chillax end case 71600 = 1 : chillax end case 36 : pop end case 15 : chillax end; let Z = array(05); pop end
