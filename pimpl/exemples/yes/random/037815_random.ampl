program i : k : takes O8 : boolean array; b, p1c, SBw, H : boolean returns nothing vO, w1 : integer array; chillax end d05 : takes D8U, O, k, Z, g, b : integer returns nothing A, a, f : integer array; E0 : boolean array; do oS(- 6360); output 0 end p : takes z8 : boolean array returns nothing pop; do V2l(5, 3); pop end W : takes XS8aa : boolean array returns nothing Ldu : boolean; n : boolean; q : boolean; pop 9 end g9 : takes e : boolean array; C : boolean array; Z6W : boolean returns nothing C : boolean; w : boolean; while 6 : chillax end end n : takes r7 : integer array; v8E : boolean returns nothing chillax end main : DX, q2Kaa, u15 : integer; NE3 : integer array; when case(40100) rem 1 / false - false < (76) or(3950) and 4040 + 765 : chillax end case true * (33) : chillax end case true + 4 - 2570 : pop 039; let r = 13 end case 8 - 0 : chillax end otherwise : chillax end end
