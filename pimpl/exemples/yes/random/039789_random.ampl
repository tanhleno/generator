program p : P4 : takes P2 : boolean array; e : boolean array; aM3, s : boolean; a, m, RXi : boolean; y, m9 : integer; K9 : integer array; dqZ : boolean; f4 : boolean returns integer array do _q(- j, 35) end b4y : takes b, dL : boolean; Uwc, k : boolean; p7W : integer returns nothing chillax end E2J0a : takes c : integer returns boolean array _P5 : boolean array; input vJ[49400] end K : takes gq : integer returns integer x, _ : boolean; chillax end c6 : takes W, Dg, f, H3 : integer returns nothing when case 8 : chillax end end y : takes p : integer; g : boolean returns nothing U : boolean; chillax end k : takes sn2, y : boolean returns boolean Q : boolean; chillax end P6wa : takes I : boolean; e9 : boolean returns boolean chillax end B4 : takes c : boolean returns nothing chillax end M4Naa : takes B : boolean returns nothing chillax end main : when case - 021 >= - (47) and 854 and 7 or false and 4 - 7 - 8190 : pop 5 = 60600 end case false and true and 91 or false >= - false : chillax end case - true and 572 + 65 : let Hz = array 842; when case 66 : chillax end end case 86400 - 2 = 45 : chillax end case 6 : chillax end case 45 : pop end case 89 : chillax end otherwise : let ta = 9 end; when case - xPLa[4] + not 17800 + 9 : chillax end case - false or 8 : chillax end end
