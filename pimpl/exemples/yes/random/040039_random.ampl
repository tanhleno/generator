program l : A8s0 : takes lrT : boolean array; U5 : boolean array returns boolean fB70 : integer; qIU : integer; when case - (9) + 58 > - 9 - 887 : chillax end case - 8 < 5 : input t1u0; input G; pop end; while - 872 : input G end; input v0maa[45700] end lX : takes C : boolean array; L, lm2 : integer array; o : integer; d, C, Du : integer array returns integer array k54 : boolean array; when case - 7250 - 2 : chillax end; let R[9] = array 0; do S770(11, 45) end h95 : takes v : integer; T, v98aa : boolean; z45aa, R0, nD3 : integer array returns integer array output 2; input S8; while 02 : chillax end end pO : takes Y7 : boolean; o : integer returns boolean array chillax end main : when case false - (5090) * not 63 - true : chillax end case - false - 652 - 25 - 1 : chillax end case true : when case 04 : chillax end otherwise : chillax end end case 2 - 4 >= 5 : chillax end otherwise : chillax end; pop end
