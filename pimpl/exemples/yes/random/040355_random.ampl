program x5 : z : takes M : boolean array; k : boolean returns integer when case - not 7 /= - 64 - 6 : input w[6]; while 7 : chillax end; when case 6 : chillax end; pop end otherwise : chillax end; when case - 3 >= 29 : chillax end case 68300 = 64 : let g = 5 end otherwise : do Xj3(54); pop end; let i[3] = 4; when case 92300 : pop end case 0 : chillax end; pop; output "1\\"; pop end G : takes h : integer returns boolean input l[- 92 - 97] end aV : takes c7a, Y4, I : boolean array; O2X, X, QC : integer array; z : integer returns boolean array chillax end KS : takes C : integer returns integer array tk, I6 : boolean; let Fm[65] = array 93 end acMaa : takes b, s : integer; o2J0a : integer array; ew60a, E : boolean returns boolean do e(80000) end UL3 : takes b : boolean returns integer X0Fa : boolean; chillax end main : do o(J[58] and F[49] <= - false or true and 4); when case not true / 056 and 5 >= - false and 1 : input o; pop; let T = 4 end otherwise : chillax end end
