program S : X : takes v : boolean array returns boolean V : boolean array; X : boolean array; pop 9; when case - 42 < 512 : while 879 : chillax end; do W(6); pop end otherwise : chillax end end O : takes C : boolean array returns integer v : boolean; let u3j = 063 = 8 end c : takes v4 : boolean array returns boolean array z : integer array; chillax end S : takes V, Qa, B7 : integer; ZG : integer; o : boolean array; V, Fy : boolean returns nothing O : boolean; chillax end main : p4W0 : boolean; _44aa : integer array; xS2a, zn, z, qN2a : integer; nN : integer; K2, Q, S : boolean; t2_0a, i : boolean; a : boolean; k : boolean; output - true - 5 and 386 + 8 end
