program E : eP : takes o : boolean array returns integer Ph80a : boolean; Z, m1, uII, i1 : integer; z4 : integer array; nw, m : boolean; s2 : boolean; O : boolean; chillax end X : takes q, J, o, It : integer; B, K, q : boolean array; B3 : integer array; z : boolean array; s, B33a : integer array returns integer d, u, N : integer array; when case - 5 - 73 : while 83200 : chillax end; let B = 5 end case 2 = 7430 : chillax end case 5 : chillax end case 34400 : chillax end; while 8 = 79 : chillax end end main : xj : integer array; I, wa, u5, FP : boolean array; xh, i : integer array; Rd, bVO, b9Q, z : integer array; r, U73aa : integer; et : boolean; i : boolean; while s + l5o - not 7 and 98 or 4 - 91 <= - 679 * true + true and 16 - 781 : output "S/" end; while - true : chillax end; pop 89 - 3390 >= 3890 end
