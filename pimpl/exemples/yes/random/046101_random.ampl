program R : _ : takes Dclaa : boolean returns boolean k9, Sc, u : integer array; nPI0, E, WG0aa : integer; chillax end J0 : takes xH, zi, K : boolean returns boolean array Y : boolean; chillax end RH2 : takes X : integer returns integer let Y6Y[82] = 4 end W : takes K : boolean returns boolean u5 : boolean; K : boolean; nX : boolean; chillax end C : takes u810a, I9 : boolean returns nothing Pd2 : boolean; chillax end nX : takes i, l : integer returns nothing Z : boolean; chillax end X : takes lk6, z : boolean; AkZa : boolean; w : boolean returns boolean B : boolean; pop end main : while - 54 - L or 5 and 96200 or 90 /= - p and(56) + 637 or 26 - 2 : chillax end; do u9(false and c and 3 + fo20a and 51900); when case 8 /= 6 : chillax end case - 0 /= 9 : chillax end case 0 : do X(02); pop end case 58700 : pop end case 9 : chillax end otherwise : output "P"; output "" end end
