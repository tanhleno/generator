program J8 : l : takes x2 : boolean returns integer chillax end g : takes P : integer array; M : integer; l, pg : integer; L5b, F8A, ds3, B8 : boolean returns nothing iYF : boolean; while - 8 /= 7 : do i(04); while 1 : chillax end end end main : w : boolean; let Y2R[- not not 2 + (5710) and R or(587) and 54100 + 0] = - false; when case h5w : chillax end case - not 1 or 4 - 6 : do EZEa(2, 194) end case 5 >= 421 : chillax end case 10 : input D7Ea; pop end otherwise : input r end; output - 1 - 1 end
