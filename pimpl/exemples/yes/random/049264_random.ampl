program hX : Os0 : takes E : integer; b9, h8, I, j47, Mtf, RY00, j3j : integer; _ : integer array returns integer R0, UP1, U8, v : boolean array; b : boolean array; V, T, v : boolean array; chillax end t : takes e : integer; r_, x : boolean array; OxZ, m : boolean array; z, S, t : integer array returns nothing R9, r2 : integer array; B26 : integer array; pop 35 = 30800; let N3[433] = array 8 end main : let M[false] = - L or(48800); when case(2) * not 6 or(7580) <= - false and 47 : when case 6 : input Y; pop end case 6 : pop end case 33 : chillax end otherwise : chillax end end case not 0860 and 09 or 60600 < 39 : let s[8] = 7 end otherwise : while 67 : pop end; when case 225 : chillax end; pop; pop end end
