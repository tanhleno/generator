program y5 : oF1 : takes j41 : integer; t, II, y05, u : boolean returns nothing when case - (901) and 5 - 4 - 1480 <= 864 - 8 : chillax end case 68 - 3 = 48200 : chillax end otherwise : let q9g0 = 86; when case 03700 : chillax end; pop end; while 8 - 46 < 59700 : let A2qa = 1 end end _ : takes hi : boolean array; a, nF, t, v, rl7, C : integer returns integer P3, ry : integer array; chillax end e : takes OfC : integer returns nothing input IY; while 0 : pop end end main : when case - true / Vj0(68500) * 9 - false / (855) and 10300 : let G8 = 43700 = 0 end case not(6) rem I and 94 <= - not 7 and 3 + 158 : output "Y"; input g[2980]; input r end case - not 4 and 041 - 5 <= - 4 - 126 : chillax end case 7 - 1 : chillax end otherwise : output "" . 64; when case 4 : pop end case 145 : chillax end otherwise : chillax end; do j8(9) end end
