program _ : e : takes Sy : integer; r, Fg, D : boolean array returns nothing Z8Yaa, uCca : boolean array; OD : boolean; f, MkI : integer array; iy_a, BG1 : boolean; jkI : boolean; when case D and 74 - 806 > - 8 : do Dltaa(82600); let V = 0; do FL(6); pop end case - 02200 - 3 /= 30800 : chillax end case 05 = 7 : do a(854) end otherwise : chillax end end vpIaa : takes t8B, s : boolean array; J29a : integer array returns boolean f, s : integer array; input S3 end g : takes q : boolean; Z : integer array returns nothing R8x, L : integer array; x : boolean; I160 : boolean; chillax end main : C0Y, d7 : boolean array; while false and(17) >= false / B or not 460 and 154 + 852 : while - 343 - 4 = 03900 : chillax end; output 89; while 171 : chillax end; while 4 : chillax end; input O; pop end; do k(true * (4) or false and 50 + 0 /= - false - 9 - 0) end
