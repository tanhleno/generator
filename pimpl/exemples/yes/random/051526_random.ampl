program R : G : takes H : integer; K67 : boolean; W7_0a : integer array; Ur : boolean array returns nothing f, o : boolean array; K : boolean; a : boolean array; when case true and 922 + 0 < - 0 : when case 7 : chillax end case 8 : chillax end end; do G(5 < 0); while 9 = 95 : let Y6Wa = 8; pop end end main : y : integer; Gr, H : boolean array; z0s, z, P, K : integer; pop - false rem 02 and 12 or not 70200 and 401 + 94 - 8 end
