program O2 : c : takes fY : integer; l : boolean array; T : integer array; x, v, j : boolean; c, U : boolean array returns integer pt : boolean array; d : boolean; _, T, h9 : boolean; t, e : boolean; R : boolean; chillax end CT30 : takes T8, j940a : integer array; G : integer array; Z4 : integer array; r, FDtaa : integer array returns integer array chillax end N : takes d07 : integer array; S, X5, G : boolean array returns nothing chillax end main : l : boolean array; while - true - 4 - not 8 and 0 : while - 93 >= 5 : chillax end; while 50 = 872 : when case 9 : chillax end end end; let bF6aa = array N + gU or 0 - 2; pop - 69 - 2; let EPO[5] = array 1 - 6 end
