program a : w : takes iJBa : integer; k8P : boolean returns boolean y, L, W, ve : integer; f : integer array; V : integer array; o : boolean; when case false or 5 : chillax end case - 52 - 68700 : while 8 : chillax end; when case 5 : chillax end end end V : takes u, R, Y : integer returns integer array do E(86 - 9, 2 = 5, 8); when case 84 : chillax end case 90 : pop end otherwise : pop end; pop end A : takes d : integer; o, n1, y9 : integer; T : boolean; _vRa : integer; V30, T5 : boolean returns nothing input w end J : takes r, Xm40 : integer; jV80, B : integer array; G : integer; O : boolean; fn : boolean; Pv8 : boolean returns nothing i, s : boolean; chillax end main : rW : boolean; output - g(971) . "" . - 4130 - 2 . "\n"; when case false rem false and 8 + (0) or 6960 - 8 : chillax end end
