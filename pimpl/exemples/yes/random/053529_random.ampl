program j6 : h : takes s2 : integer array; M, AU8, j, iL, vo0aa : boolean array returns boolean array M16a : integer; G5 : integer; h, j : integer; e, wHeaa : boolean; pop - 0 - 91 end U : takes k : boolean array returns boolean P, hq : boolean array; y, Yf1, s8U0 : integer; cH : boolean; while - 9 - 9 > 1 : chillax end; while 02000 = 1180 : input n end; pop end b : takes n10 : boolean; Z, V23a, I3, K, E : boolean; d : integer array returns nothing B, Sv50a : boolean array; let M[60] = array 841 end a : takes y6Q, Z4 : integer array; iA_, z, P : boolean array returns boolean j, A : boolean; do _M(677, 079); when case 174 : chillax end end main : x : boolean; chillax end
