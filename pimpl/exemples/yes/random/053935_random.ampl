program x : gP80a : takes X : integer array; u, e5, F930 : boolean array; S, AM40a, zvla, N0, j : integer returns nothing O5, p, v, B1X, FS : boolean; let I83 = array K end aJ : takes hoRa, tP, Q, p, tH, nB, Jc : integer returns nothing let oKva = 684 = 0 end main : r : integer; m, lRb0a, R0Faa, _v : boolean; Ca : boolean array; k : boolean array; O : boolean array; do T((12) <= - not 7 rem true and 3040 + true and 2 - 95); do ZiE0a(- not false * not 38 = - o1z and 31) end
