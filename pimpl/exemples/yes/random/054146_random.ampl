program H0L0 : S6 : takes G : integer array; S, J52, ri : integer; Y8, s030 : integer array; J : integer returns boolean array P, wO : integer; o : boolean array; do _e(- 69 and 7 <= 7, - 28 - 3 <= 9); input w[- 5]; input J[3]; input k end m : takes A4 : integer array; jr, Z9, a : boolean returns integer K : boolean; when case - 52900 : chillax end case 7 : chillax end otherwise : chillax end; when case 0 = 389 : pop; pop end; do V(673); do u(004); pop; pop end w5ia : takes E, e : boolean array returns nothing chillax end H : takes h, O : boolean array returns nothing output 13 . "" end Y : takes a500a : boolean array returns nothing y8Z0a : boolean; T : boolean; chillax end B : takes v : boolean; q_l0a : boolean; k : boolean; hz : boolean returns nothing o : boolean; while 2080 : chillax end; pop end main : Y4 : integer array; let w5[- true * (1) rem 9 and 99 - YN(39)] = array - true + not not 9; input xSS0a end
