program Kc : I62 : takes ek : integer array; N, P, Sh : integer returns nothing o, e260a : integer array; C : integer; let g = 91 - 77 end Z0 : takes Z1, Pd7 : boolean; mC5a : boolean array; N3S : boolean; E7, j : integer array returns nothing QJ, J, FEp : boolean array; when case 2 - 1080 >= 2 : chillax end otherwise : pop end; input K; when case 1 : chillax end case 49 : chillax end end q7 : takes e7d : integer returns nothing j50aa, u : boolean array; let X[95600] = 7 end RP : takes SA, v7m0a, y : integer array; hg, a : boolean array; i, c : boolean returns integer array g : boolean; chillax end w : takes LzG0a : integer returns integer array while 5 : chillax end end z8 : takes z6, M, w1Na : integer returns boolean array R : boolean; while 6 : chillax end; pop end main : I8 : integer; do C(true rem 80 / true or true + Am3a and 404); input W07aa[- not false]; input D05aa; while - 2 - 6250 >= 40 : when case 1 : chillax end; input G8; pop end end
