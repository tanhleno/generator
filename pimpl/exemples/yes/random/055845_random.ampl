program P2 : L : takes X : integer array; e : boolean array; Cd : boolean; sT2aa, s1o0 : boolean; Shj, z, RM : boolean; t9 : integer array; d, W : boolean returns nothing let Nh[52 and 16] = array - ef + 097 - 60; do U(- 13700 - 32, 0) end F : takes t6, sR80a, T1 : integer; p4, lJ, K : boolean returns nothing l1 : boolean array; i : integer; pop 332; let B1R[5] = array 2 end M : takes M, L3 : integer array; UV, g, O : integer; F : boolean array returns nothing o : integer; when case 9 : chillax end otherwise : chillax end; when case 2 : chillax end case 9110 : chillax end otherwise : chillax end; output "f"; let Os = 0; pop end main : C, MD60, Y : integer array; when case - not E[4] / not f0D * true + n[5] < - A5(00) / (77) and 4 - 22900 : chillax end case - 999 or true : chillax end; while not G / not 80 and 60500 + (61) or 72 = - not 5 : pop 59; when case 015 : pop end otherwise : chillax end end; input A[- S7j and 0]; pop 0 = 3 end
