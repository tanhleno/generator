program n : J : takes Uh5 : integer array; q6 : integer returns integer chillax end d : takes bTi0a : integer array; w, sV40 : boolean array returns nothing v : integer array; chillax end main : kT50a, M, um8aa : boolean array; when case 4 : while 4 - 0 : input uqVaa end; input m2q; output 2; while 8 : chillax end; input d5 end case 13 or true < - 20 and 3 : pop end case - false = - 77 - 87 : pop 2; let vw = 4 end case - 7 - 98 : input c3; while 585 : chillax end; pop end case 48 : output "" end case 81900 : chillax end otherwise : when case 277 = 2 : input Q; pop end case 450 : pop end end; let l8[false * (8000)] = - h and 02 - 7 - 6 <= - 1900 end
