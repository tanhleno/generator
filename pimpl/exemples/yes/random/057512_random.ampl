program iFRaa : VN : takes V : integer array; e : integer returns nothing h : boolean array; chillax end f : takes N, gP50a, f8 : integer array; p : integer array returns boolean z : boolean; Dd60 : integer; when case 58 : while 2 : chillax end; do s(47) end otherwise : input M0; pop end end N : takes E, rc8 : boolean; v2I0a, Zx, r, d0 : boolean returns nothing i440, d9N, eQ : boolean array; when case 4 : input n end case 0 : pop end case 9 : chillax end otherwise : chillax end end G52aa : takes O : integer returns integer array W9 : boolean; bi : boolean; chillax end G : takes n8, oFO0 : integer array; ih : boolean array; Z080 : boolean returns nothing G4 : boolean; U : boolean; chillax end s : takes SR9 : integer array; u, D : boolean; jG : boolean; f5 : boolean returns integer array let n = 0210; pop end main : do R6c0a(- On4a[17] and false, - true < true - 69, not 20 and 3 >= - 55 - 53000, 2 > 0, 17); output 5 end
