program m : z7 : takes O690a : integer array returns boolean array m, O, UGp0, O1x : boolean array; _2i0 : boolean array; input Y[- h and 95 or 9] end qQ : takes z8 : integer array returns integer array ng2, M48, B5E : integer array; F, Of1 : boolean; l7 : boolean; chillax end h8ra : takes I, i : boolean returns integer array chillax end main : s : boolean array; j, l8 : integer array; let SXf0[- 62500] = array true / false * not 2 and 00100 or true rem(64) + true and 3 - 8 - 0130; while 9 - not 77 : when case 4 = 9 : input x; pop end otherwise : pop end end; while - 36 : chillax end; when case 8 : chillax end otherwise : while 7 : chillax end; pop end; when case 13 : do RJ00a(508); pop end case 2 : pop end otherwise : pop end end
