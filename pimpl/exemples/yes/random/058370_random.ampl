program c : L : takes Mu8 : integer array returns boolean s : boolean array; u9 : integer array; do h5(- (018) and 16700 < - 9380) end G7 : takes Z, iq9aa, bG3a, x5 : boolean returns nothing chillax end K7 : takes _1 : integer returns boolean N76, Iv10, R6 : boolean array; s0 : boolean; output "" . 5 . ""; let u[4600] = array 79700; do J(152); output ""; pop end Z : takes P, Kr5 : integer; E1 : boolean array; p, LD : boolean returns integer array while 06 : pop end; let fzb0 = 659; when case 3 : chillax end end XV : takes Il, T3 : integer; w : boolean; Hd, t : boolean returns boolean let YX = 20500; while 2 : chillax end end c6 : takes qr3a : integer; i : boolean; J : boolean; sj : boolean returns nothing Fc5 : boolean; when case 038 : chillax end end Y : takes U1 : boolean; V : boolean returns nothing OX : boolean; pop end F23 : takes LQ4 : boolean returns nothing chillax end main : pop - false rem 640 and 5 /= - true and 0 + 33 - 38400; when case - G21[4] rem D1 and 3 + K and 8 : do Nx(2 = 3) end end
