program fBa0a : R6 : takes T9 : integer array returns integer ZD, YF8 : integer array; j66, B : integer; C : integer array; O0, L : boolean; chillax end F : takes Ny, l2 : integer; vQ, H : boolean array returns nothing D : integer; Q, Hj, S7 : integer array; e, E : boolean; do z7(67 - 3); pop; pop 302; when case 5 : chillax end; let u = 963 end M : takes C, N, G, HA, Dzb : integer array returns nothing H, W : boolean; chillax end iT8 : takes X : integer; I1 : integer array; OS : boolean array; J, VZ : boolean; o : boolean; k2 : boolean returns boolean array I2, c6 : boolean; b : boolean; i51 : boolean; let G = array 3; pop end E : takes N5 : boolean array returns nothing chillax end m : takes M : boolean; P22 : boolean; H : boolean; U : boolean returns nothing s : boolean; while 17 : chillax end end main : B0 : boolean array; output "-"; do DI(- 8 - (691) >= K3n); let Q[- not 86] = array not 91 and 1 or 8 end
