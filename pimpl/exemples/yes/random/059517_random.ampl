program V : cv : takes js : integer array returns integer input Q end up9 : takes ZX4, Y : boolean array; itt, f, a : boolean; d, B : boolean; f : integer array; jz, D : boolean returns boolean array when case - 9 = 19 : when case 3 : chillax end end otherwise : chillax end end Z5 : takes k, PL8, g9O0, J0, w, ykyaa : integer array; F52, omq0 : integer array; sPF : boolean; VNr, aT : integer array; c3, VV : boolean returns nothing G, w, r2Ka : integer array; pop 4 end yf0 : takes Dzm0a : boolean; B : integer array; q : boolean returns nothing D, c : boolean; _U : boolean; c1 : boolean; while 76 : pop end end main : QD, E : boolean; when case 1 = - not(8) : chillax end otherwise : output "" . 7 . "1^"; input ge end; when case - M and true > - true and 8 : when case 5 : when case 032 : chillax end; pop end otherwise : pop end; while 7 : pop end end case true and 1 - 6 - 4 : chillax end; while not 1 and 8 : chillax end end
