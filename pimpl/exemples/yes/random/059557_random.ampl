program q : m : takes G : integer array returns integer pop; do o1(4 <= 03) end y : takes r6, U : boolean array; IMm, y, IzIa : integer array returns nothing do ZA80(5 - 6, 5 = 9, 1, 9520) end main : R00 : integer; N : integer array; Ho : boolean; let W[false * not qi6 and not 1] = array - 4; when case - (318) or false and 098 < s or 8 - 7 : while 63 = 1 : output "-"; pop end; pop end case vi : chillax end case 5 : chillax end otherwise : output 05 end; when case - not 5 and 801 + 0 - 54 > 2 - 54 : chillax end otherwise : when case 2 : chillax end end; when case 8920 - 7 >= 63 : chillax end case 12 : while 7 : chillax end end end
