program T4 : x : takes A : integer array returns nothing x2, d, N, g9F, a : boolean array; chillax end j : takes oK : integer; a : integer; Q, _ : boolean; v : boolean array; Q : boolean; W8, j79a : boolean returns integer array C0 : boolean; nD, H, A : integer; x9r0 : boolean; let A = array - 2 end A : takes xf, NBXa : integer array returns boolean i, BL, g : boolean; O52a, g33 : boolean; e : boolean; when case 6 = 36 : chillax end; while 5 : chillax end; while 11 : chillax end end T : takes w : integer array; EaA, c : integer array returns integer input j80a; do Vw(20); when case 0 : chillax end; pop end t9 : takes l, N5 : boolean; F, K45 : integer returns boolean when case 1 : chillax end; when case 683 : chillax end; pop end A : takes K, W : boolean array returns nothing when case 6 : chillax end end main : V81 : boolean; n7, p2, kvP : boolean; output "" . not 1 and 4 + 18700 - 47; let a[- true * L53aa and 79600 - H and 2970] = - (18) /= - 8 - 3; output 5 - 85 = 54600 end
