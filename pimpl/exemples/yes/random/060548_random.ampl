program e : X0 : takes H9 : integer array returns nothing B4, C60 : boolean array; w : integer; i, F, H35 : integer array; E, g : boolean; s : boolean; Y5 : boolean; let l[26 or 11000] = array true and 85 end d7S0a : takes pm, S : integer array; VtD : boolean array; OSZa, j, A : boolean array; iCsaa : boolean array returns boolean do T(- 41700 - 1); when case 1 : chillax end case 9 : pop end otherwise : chillax end; pop 157; let g = 62; output "["; pop end J08a : takes n77, t : integer array returns nothing _90aa : boolean array; chillax end main : when case 4 rem(81) rem U and 251 : pop end case - 63 : while 3 : chillax end end case - ymn and 6 = 14 : chillax end otherwise : let aQ[2010] = 4930; let Y = array 9 end; while - false + 47000 - 0 - 2 >= not 9 : when case 4 : output "v"; pop end otherwise : pop end end end
